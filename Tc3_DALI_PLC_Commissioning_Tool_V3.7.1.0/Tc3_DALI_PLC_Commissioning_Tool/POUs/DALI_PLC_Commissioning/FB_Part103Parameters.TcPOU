<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="FB_Part103Parameters" Id="{30ac925e-8959-409b-8e1e-6054b327c2e9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Part103Parameters
VAR_INPUT
	ipDALICommunication				:	I_DALICommunication;
END_VAR
VAR_OUTPUT
	bBusy							:	BOOL;
END_VAR
VAR
	{region "Visu"}
	nAddressRange					:	BYTE; // 0: single short address / 1: address range
	nStartAddress					:	BYTE;
	nEndAddress						:	BYTE;
	nSelectedAddress				:	INT := 255;
	bRead							:	BOOL;
	bWrite							:	BOOL;
	bHideWaitSymbol					:	BOOL := TRUE;
	aParameters						:	ARRAY [0..63] OF ST_DALI103Parameters;
	{endregion}
	i								:	INT;
	nStep							:	INT;
	nAddress						:	BYTE;
	nInstanceAddress				:	BYTE;
	aNumberOfInstances				:	ARRAY [0..63] OF BYTE;
	aInstance						:	ARRAY [0..63, 0..31] OF BYTE; // First field in array includes short address and second field includes instance type of the according short address.
	bFirstCycle0					:	BOOL;
	bFirstCycle1					:	BOOL;
	bFirstCycle2					:	BOOL;
	bFirstCycle3					:	BOOL;
	bFirstCycle4					:	BOOL;
	nType0							:	INT;
	nType1							:	INT;
	nType2							:	INT;
	nType3							:	INT;
	nType4							:	INT;
	aStringType0					:	ARRAY [0..31] OF STRING;
	aStringType1					:	ARRAY [0..31] OF STRING;
	aStringType2					:	ARRAY [0..31] OF STRING;
	aStringType3					:	ARRAY [0..31] OF STRING;
	aStringType4					:	ARRAY [0..31] OF STRING;

	fb103StartQuiescentMode			:	FB_DALI103StartQuiescentMode(0);
	fb103StopQuiescentMode			:	FB_DALI103StopQuiescentMode(0);
	fb103QueryOperatingMode			:	FB_DALI103QueryOperatingMode(0);
	fb103SetOperatingMode			:	FB_DALI103SetOperatingMode(0);
	fb103QueryNumberOfInstances		:	FB_DALI103QueryNumberOfInstances(0);
	fb103QueryInstanceType			:	FB_DALI103QueryInstanceType(0);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{region "Detect Commands"}
IF (bRead AND (nStep = 0)) THEN
	nStep := 5;
	bRead := FALSE;
	bHideWaitSymbol := FALSE;
	IF (nAddressRange = 0) THEN // single short address
		nAddress := TO_BYTE(nSelectedAddress);
	ELSIF (nAddressRange = 1) THEN // address range
		nAddress := nStartAddress;
	END_IF
END_IF

IF (bWrite AND (nStep = 0)) THEN
	nStep := 1000;
	bWrite := FALSE;
	bHideWaitSymbol := FALSE;
	IF (nAddressRange = 0) THEN
		nAddress := TO_BYTE(nSelectedAddress);
	ELSIF (nAddressRange = 1) THEN // address range
		nAddress := nStartAddress;
	END_IF
END_IF
{endregion}

{region "Avoid errors in line output"}
IF (nSelectedAddress < 0) THEN
	nSelectedAddress := 255;
END_IF
{endregion}

{region "Manage Dialog Selection}
IF (nStep = 0) THEN
	bBusy := FALSE;
ELSE
	bBusy := TRUE;
END_IF
{endregion}

{region "Execute Commands"}
CASE nStep OF
0:
{region "Init"}
	bRead := FALSE;
	bWrite := FALSE;
	bHideWaitSymbol := TRUE;
	fb103StartQuiescentMode.ipDALICommunication := ipDALICommunication;
	fb103StopQuiescentMode.ipDALICommunication := ipDALICommunication;
	fb103QueryOperatingMode.ipDALICommunication := ipDALICommunication;
	fb103SetOperatingMode.ipDALICommunication := ipDALICommunication;
	fb103QueryNumberOfInstances.ipDALICommunication := ipDALICommunication;
	fb103QueryInstanceType.ipDALICommunication := ipDALICommunication;
{endregion}
{region "Read"}
5:
{region "Start Qiescent Mode"}
	fb103StartQuiescentMode(bStart:= TRUE,
							nAddress:= nAddress,
							eAddressType:= Tc3_DALI.E_DALIAddressType.Short,
							eCommandPriority:= Tc3_DALI.E_DALICommandPriority.Middle);
	IF (NOT fb103StartQuiescentMode.bBusy) THEN
		fb103StartQuiescentMode(	bStart:= FALSE);
		nStep := 10;
	END_IF
{endregion}
10:
{region "Query Operating Mode"}
	 fb103QueryOperatingMode(bStart := TRUE,
							 nAddress := nAddress,
							 eAddressType := E_DALIAddressType.Short,
							 eCommandPriority := E_DALICommandPriority.Middle);
	IF (NOT fb103QueryOperatingMode.bBusy) THEN
		aParameters[nAddress].nOperatingMode := fb103QueryOperatingMode.nOperatingMode;
		nStep := 20;
		fb103QueryOperatingMode(bStart := FALSE);
		IF (fb103QueryOperatingMode.ipResultMessage.nEventId = TC_EVENTS.TcDALIEventClass.NoResponseFromTheDALIDevice.nEventId) THEN
			aParameters[nAddress].nOperatingMode := 0; // deleting old entries in the table 
			aParameters[nAddress].sInstanceType0 := '';
			aParameters[nAddress].sInstanceType1 := '';
			aParameters[nAddress].sInstanceType2 := '';
			aParameters[nAddress].sInstanceType3 := '';
			aParameters[nAddress].sInstanceType4 := '';
			IF (nAddressRange = 1) THEN
				nAddress := nAddress+1;	
				IF (nAddress <= nEndAddress) THEN
					nStep := 10;
				ELSE
					nStep := 0;
				END_IF
			ELSE 
				nStep := 0;
			END_IF
		END_IF
	END_IF
{endregion}
20:
{region "Query Number Of Instances"}
	fb103QueryNumberOfInstances(bStart := TRUE,
								nAddress := nAddress,
								eAddressType := E_DALIAddressType.Short,
								eCommandPriority := E_DALICommandPriority.Middle);
	IF (NOT fb103QueryNumberOfInstances.bBusy) THEN
		aNumberOfInstances[nAddress] := fb103QueryNumberOfInstances.nNumberOfInstances;
		fb103QueryNumberOfInstances(bStart := FALSE);
		nStep := 30;
	END_IF
{endregion}
30:
{region "Query Instance Type"}
	fb103QueryInstanceType(bStart := TRUE,
						   nAddress := nAddress,
						   eAddressType := E_DALIAddressType.Short,
						   nInstanceAddress := nInstanceAddress,
						   eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						   eCommandPriority := E_DALICommandPriority.Middle,
						   eInstanceType=> aInstance[nAddress, nInstanceAddress]);
		IF (NOT fb103QueryInstanceType.bBusy) THEN
			fb103QueryInstanceType(bStart := FALSE);
			nInstanceAddress := nInstanceAddress+1;
			//***************STRING***************
			aParameters[nAddress].sInstanceType0 := '';
			aParameters[nAddress].sInstanceType1 := '';
			aParameters[nAddress].sInstanceType2 := '';
			aParameters[nAddress].sInstanceType3 := '';
			aParameters[nAddress].sInstanceType4 := '';
			bFirstCycle0 := TRUE;
			bFirstCycle1 := TRUE;
			bFirstCycle2 := TRUE;
			bFirstCycle3 := TRUE;
			bFirstCycle4 := TRUE;
			FOR i := 0 TO aNumberOfInstances[nAddress] DO
				IF (aInstance[nAddress, i] = 0) THEN // Read instance type 0
					nType0 := i;
					IF (NOT bFirstCycle0) THEN
						aParameters[nAddress].sInstanceType0 := CONCAT(aParameters[nAddress].sInstanceType0, ',');
					END_IF
					aStringType0[nType0] := TO_STRING(TO_INT(nType0));
					aParameters[nAddress].sInstanceType0 := CONCAT(aParameters[nAddress].sInstanceType0, aStringType0[nType0]);
					bFirstCycle0 := FALSE;
				END_IF
				IF (aInstance[nAddress, i] = 1) THEN // Read instance type 1
					nType1 := i;
					IF (NOT bFirstCycle1) THEN
						aParameters[nAddress].sInstanceType1 := CONCAT(aParameters[nAddress].sInstanceType1, ',');
					END_IF
					aStringType1[nType1] := TO_STRING(TO_INT(nType1));
					aParameters[nAddress].sInstanceType1 := CONCAT(aParameters[nAddress].sInstanceType1, aStringType1[nType1]);
					bFirstCycle1 := FALSE;
				END_IF	
				IF (aInstance[nAddress, i] = 2) THEN  // Read instance type 2
					nType2 := i;
					IF (NOT bFirstCycle2) THEN
						aParameters[nAddress].sInstanceType2 := CONCAT(aParameters[nAddress].sInstanceType2, ',');
					END_IF
					aStringType2[nType2] := TO_STRING(TO_INT(nType2));
					aParameters[nAddress].sInstanceType2 := CONCAT(aParameters[nAddress].sInstanceType2, aStringType2[nType2]);
					bFirstCycle2 := FALSE;
				END_IF
				IF (aInstance[nAddress, i] = 3) THEN // Read instance type 3
					nType3 := i;
					IF (NOT bFirstCycle3) THEN
						aParameters[nAddress].sInstanceType3 := CONCAT(aParameters[nAddress].sInstanceType3, ',');
					END_IF
					aStringType3[nType3] := TO_STRING(TO_INT(nType3));
					aParameters[nAddress].sInstanceType3 := CONCAT(aParameters[nAddress].sInstanceType3, aStringType3[nType3]);	
					bFirstCycle3 := FALSE;
				END_IF
				IF (aInstance[nAddress, i] = 4) THEN // Read instance type 4
					nType4 := i;
					IF (NOT bFirstCycle4) THEN
						aParameters[nAddress].sInstanceType4 := CONCAT(aParameters[nAddress].sInstanceType4, ',');
					END_IF
					aStringType4[nType4] := TO_STRING(TO_INT(nType4));
					aParameters[nAddress].sInstanceType4 := CONCAT(aParameters[nAddress].sInstanceType4, aStringType4[nType4]);
					bFirstCycle4 := FALSE;
				END_IF
			END_FOR
			//********************************************
			IF (nInstanceAddress > aNumberOfInstances[nAddress]) THEN
				nInstanceAddress := 0;
				nStep  := 0;
				IF (nAddressRange = 1) THEN
					nAddress := nAddress + 1;
					IF (nAddress <= nEndAddress) THEN
						nStep := 10;
					ELSE
						nStep := 40;
					END_IF
				END_IF
			END_IF
		END_IF
{endregion}
40:
{region "Stop Qiescent Mode"}
	fb103StopQuiescentMode(bStart := TRUE,
						   nAddress := nAddress,
						   eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						   eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	IF (NOT fb103StopQuiescentMode.bBusy) THEN
		fb103StopQuiescentMode(bStart := FALSE);
		nStep := 0;
	END_IF
{endregion}
{endregion}
1000:
{region "Write"}
	fb103SetOperatingMode(bStart := TRUE,
						  nAddress := nAddress,
						  eAddressType := E_DALIAddressType.Short,
						  eCommandPriority := E_DALICommandPriority.Middle,
						  nOperatingMode := aParameters[nAddress].nOperatingMode);
	IF (NOT fb103SetOperatingMode.bBusy) THEN
		fb103SetOperatingMode(bStart := FALSE);
		IF (nAddressRange = 0) THEN
			nStep := 0;
		END_IF
		IF (nAddressRange = 1) THEN
			nAddress := nAddress + 1;
			IF (nAddress > nEndAddress) THEN
				nStep := 0;
				nAddress := 0;
			END_IF
		END_IF
	END_IF
{endregion}
 END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_Part103Parameters">
      <LineId Id="92" Count="17" />
      <LineId Id="724" Count="1" />
      <LineId Id="110" Count="2" />
      <LineId Id="952" Count="0" />
      <LineId Id="948" Count="3" />
      <LineId Id="947" Count="0" />
      <LineId Id="953" Count="0" />
      <LineId Id="903" Count="5" />
      <LineId Id="113" Count="0" />
      <LineId Id="954" Count="0" />
      <LineId Id="114" Count="7" />
      <LineId Id="1142" Count="0" />
      <LineId Id="122" Count="3" />
      <LineId Id="137" Count="1" />
      <LineId Id="1118" Count="0" />
      <LineId Id="1121" Count="8" />
      <LineId Id="1120" Count="0" />
      <LineId Id="139" Count="1" />
      <LineId Id="358" Count="0" />
      <LineId Id="360" Count="2" />
      <LineId Id="356" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="727" Count="3" />
      <LineId Id="1041" Count="1" />
      <LineId Id="536" Count="0" />
      <LineId Id="540" Count="0" />
      <LineId Id="994" Count="8" />
      <LineId Id="993" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="808" Count="0" />
      <LineId Id="365" Count="3" />
      <LineId Id="158" Count="1" />
      <LineId Id="162" Count="4" />
      <LineId Id="370" Count="0" />
      <LineId Id="809" Count="0" />
      <LineId Id="371" Count="4" />
      <LineId Id="493" Count="0" />
      <LineId Id="380" Count="0" />
      <LineId Id="544" Count="0" />
      <LineId Id="514" Count="0" />
      <LineId Id="653" Count="0" />
      <LineId Id="661" Count="2" />
      <LineId Id="1043" Count="1" />
      <LineId Id="664" Count="1" />
      <LineId Id="654" Count="0" />
      <LineId Id="1045" Count="0" />
      <LineId Id="1048" Count="0" />
      <LineId Id="666" Count="0" />
      <LineId Id="668" Count="1" />
      <LineId Id="1050" Count="7" />
      <LineId Id="1049" Count="0" />
      <LineId Id="670" Count="6" />
      <LineId Id="678" Count="1" />
      <LineId Id="1063" Count="7" />
      <LineId Id="1062" Count="0" />
      <LineId Id="680" Count="6" />
      <LineId Id="688" Count="8" />
      <LineId Id="656" Count="0" />
      <LineId Id="769" Count="0" />
      <LineId Id="515" Count="0" />
      <LineId Id="597" Count="0" />
      <LineId Id="516" Count="0" />
      <LineId Id="588" Count="4" />
      <LineId Id="600" Count="0" />
      <LineId Id="698" Count="0" />
      <LineId Id="700" Count="0" />
      <LineId Id="517" Count="0" />
      <LineId Id="530" Count="0" />
      <LineId Id="811" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="1130" Count="0" />
      <LineId Id="1132" Count="9" />
      <LineId Id="1189" Count="0" />
      <LineId Id="810" Count="0" />
      <LineId Id="710" Count="4" />
      <LineId Id="701" Count="0" />
      <LineId Id="726" Count="0" />
      <LineId Id="856" Count="1" />
      <LineId Id="850" Count="5" />
      <LineId Id="849" Count="0" />
      <LineId Id="703" Count="0" />
      <LineId Id="705" Count="1" />
      <LineId Id="177" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>