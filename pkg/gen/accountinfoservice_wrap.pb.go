// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAccountInfoService	adapts a AccountInfoServiceServer	and presents it as a AccountInfoServiceClient
func WrapAccountInfoService(server AccountInfoServiceServer) *AccountInfoServiceWrapper {
	conn := wrap.ServerToClient(AccountInfoService_ServiceDesc, server)
	client := NewAccountInfoServiceClient(conn)
	return &AccountInfoServiceWrapper{
		AccountInfoServiceClient: client,
		server:                   server,
		conn:                     conn,
		desc:                     AccountInfoService_ServiceDesc,
	}
}

type AccountInfoServiceWrapper struct {
	AccountInfoServiceClient

	server AccountInfoServiceServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AccountInfoServiceWrapper) UnwrapServer() AccountInfoServiceServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AccountInfoServiceWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AccountInfoServiceWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
