// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: alerts.proto

package gen

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Alert_Severity int32

const (
	Alert_SEVERITY_UNSPECIFIED Alert_Severity = 0
	Alert_INFO                 Alert_Severity = 9
	Alert_WARNING              Alert_Severity = 13
	Alert_SEVERE               Alert_Severity = 17
	Alert_LIFE_SAFETY          Alert_Severity = 21
)

// Enum value maps for Alert_Severity.
var (
	Alert_Severity_name = map[int32]string{
		0:  "SEVERITY_UNSPECIFIED",
		9:  "INFO",
		13: "WARNING",
		17: "SEVERE",
		21: "LIFE_SAFETY",
	}
	Alert_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"INFO":                 9,
		"WARNING":              13,
		"SEVERE":               17,
		"LIFE_SAFETY":          21,
	}
)

func (x Alert_Severity) Enum() *Alert_Severity {
	p := new(Alert_Severity)
	*p = x
	return p
}

func (x Alert_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_alerts_proto_enumTypes[0].Descriptor()
}

func (Alert_Severity) Type() protoreflect.EnumType {
	return &file_alerts_proto_enumTypes[0]
}

func (x Alert_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Severity.Descriptor instead.
func (Alert_Severity) EnumDescriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{0, 0}
}

// Alert describes an event in the system that can be acknowledged
type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique id identifying this alert within the device.
	// Assigned by the device when the alert is created.
	// ID is used by update methods like AcknowledgeAlert to identify which alert to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A human readable description of the alert condition.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The time the alert was created.
	// Output only, set by the device when the alert is created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Present if the alert has been acknowledged.
	// Acknowledgement is an indication that somebody is now aware that this alert exists.
	Acknowledgement *Alert_Acknowledgement `protobuf:"bytes,5,opt,name=acknowledgement,proto3" json:"acknowledgement,omitempty"`
	Severity        Alert_Severity         `protobuf:"varint,6,opt,name=severity,proto3,enum=vanti.bsp.ew.Alert_Severity" json:"severity,omitempty"`
	Floor           string                 `protobuf:"bytes,7,opt,name=floor,proto3" json:"floor,omitempty"`   // the floor the alert relates to, typically the floor the source is located on.
	Zone            string                 `protobuf:"bytes,8,opt,name=zone,proto3" json:"zone,omitempty"`     // the spacial zone the alert relates to, typically the zone the source is located in.
	Source          string                 `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"` // the originator of the alert
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{0}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alert) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Alert) GetAcknowledgement() *Alert_Acknowledgement {
	if x != nil {
		return x.Acknowledgement
	}
	return nil
}

func (x *Alert) GetSeverity() Alert_Severity {
	if x != nil {
		return x.Severity
	}
	return Alert_SEVERITY_UNSPECIFIED
}

func (x *Alert) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *Alert) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Alert) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type ListAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the Alert type
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// The maximum number of modes to return.
	// The service may return fewer than this value.
	// If unspecified, at most 50 items will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListModesResponse` call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Query allows filtering of the alerts returned by this request.
	// When paging the query should match for each page or INVALID_ARGUMENT will be returned.
	Query *Alert_Query `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListAlertsRequest) Reset() {
	*x = ListAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsRequest) ProtoMessage() {}

func (x *ListAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertsRequest) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{1}
}

func (x *ListAlertsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAlertsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *ListAlertsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAlertsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAlertsRequest) GetQuery() *Alert_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// If non-zero this is the total number of alerts after filtering is applied.
	// This may be an estimate.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListAlertsResponse) Reset() {
	*x = ListAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsResponse) ProtoMessage() {}

func (x *ListAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsResponse.ProtoReflect.Descriptor instead.
func (*ListAlertsResponse) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{2}
}

func (x *ListAlertsResponse) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *ListAlertsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListAlertsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type PullAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to fetch the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the ElectricMode type
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// Query allows filtering of the alerts returned by this request.
	// When paging the query should match for each page or INVALID_ARGUMENT will be returned.
	// If an alert changes to become included or excluded from this query then it will act as though it were added/removed,
	// that is to say the update type will ADDED or REMOVED not UPDATED.
	Query *Alert_Query `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *PullAlertsRequest) Reset() {
	*x = PullAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAlertsRequest) ProtoMessage() {}

func (x *PullAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAlertsRequest.ProtoReflect.Descriptor instead.
func (*PullAlertsRequest) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{3}
}

func (x *PullAlertsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullAlertsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullAlertsRequest) GetQuery() *Alert_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type PullAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of changes which have occurred
	Changes []*PullAlertsResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *PullAlertsResponse) Reset() {
	*x = PullAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAlertsResponse) ProtoMessage() {}

func (x *PullAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAlertsResponse.ProtoReflect.Descriptor instead.
func (*PullAlertsResponse) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{4}
}

func (x *PullAlertsResponse) GetChanges() []*PullAlertsResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type AcknowledgeAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device exposing this trait.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the alert.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// When true, acknowledging an alert that is already acknowledged will not result in an error.
	// Similarly un-acknowledging an alert that is not acknowledged will not result in an error.
	AllowAcknowledged bool `protobuf:"varint,3,opt,name=allow_acknowledged,json=allowAcknowledged,proto3" json:"allow_acknowledged,omitempty"`
	// When true, acknowledging an alert that does not exist will not result in an error
	AllowMissing bool `protobuf:"varint,4,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *AcknowledgeAlertRequest) Reset() {
	*x = AcknowledgeAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeAlertRequest) ProtoMessage() {}

func (x *AcknowledgeAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeAlertRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeAlertRequest) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{5}
}

func (x *AcknowledgeAlertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AcknowledgeAlertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AcknowledgeAlertRequest) GetAllowAcknowledged() bool {
	if x != nil {
		return x.AllowAcknowledged
	}
	return false
}

func (x *AcknowledgeAlertRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type CreateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device exposing this trait.
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Alert *Alert `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *CreateAlertRequest) Reset() {
	*x = CreateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertRequest) ProtoMessage() {}

func (x *CreateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateAlertRequest) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAlertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAlertRequest) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type UpdateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device exposing this trait.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The new properties of the alert.
	// Alert.id must be present.
	Alert *Alert `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
	// Fields to update relative to the Alert type
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateAlertRequest) Reset() {
	*x = UpdateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRequest) ProtoMessage() {}

func (x *UpdateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertRequest) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAlertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAlertRequest) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

func (x *UpdateAlertRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device exposing this trait.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the alert.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If set to true, and no alert with the given id exists, the request will succeed but no action will be taken.
	AllowMissing bool `protobuf:"varint,4,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *DeleteAlertRequest) Reset() {
	*x = DeleteAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRequest) ProtoMessage() {}

func (x *DeleteAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRequest) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAlertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteAlertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteAlertRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type DeleteAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAlertResponse) Reset() {
	*x = DeleteAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertResponse) ProtoMessage() {}

func (x *DeleteAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlertResponse) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{9}
}

type Alert_Acknowledgement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcknowledgeTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=acknowledge_time,json=acknowledgeTime,proto3" json:"acknowledge_time,omitempty"`
}

func (x *Alert_Acknowledgement) Reset() {
	*x = Alert_Acknowledgement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Acknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Acknowledgement) ProtoMessage() {}

func (x *Alert_Acknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Acknowledgement.ProtoReflect.Descriptor instead.
func (*Alert_Acknowledgement) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Alert_Acknowledgement) GetAcknowledgeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AcknowledgeTime
	}
	return nil
}

// Query allows filtering for list and pull requests.
// If multiple fields are present they are ANDed together.
type Alert_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Don't return alerts that were created before this time
	CreatedNotBefore *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_not_before,json=createdNotBefore,proto3" json:"created_not_before,omitempty"`
	// Don't return alerts that were created after this time
	CreatedNotAfter *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_not_after,json=createdNotAfter,proto3" json:"created_not_after,omitempty"`
	// Don't return alerts that have a severity below this value.
	// Common values are specified by the Severity enum.
	SeverityNotBelow int32 `protobuf:"zigzag32,3,opt,name=severity_not_below,json=severityNotBelow,proto3" json:"severity_not_below,omitempty"`
	// Don't return alerts that have a severity above this value.
	// Common values are specified by the Severity enum.
	SeverityNotAbove int32 `protobuf:"zigzag32,4,opt,name=severity_not_above,json=severityNotAbove,proto3" json:"severity_not_above,omitempty"`
	// Only return alerts that match this floor.
	Floor string `protobuf:"bytes,5,opt,name=floor,proto3" json:"floor,omitempty"`
	// Only return alerts that match this zone.
	Zone string `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	// Only return alerts that match this source.
	Source string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Alert_Query) Reset() {
	*x = Alert_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Query) ProtoMessage() {}

func (x *Alert_Query) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Query.ProtoReflect.Descriptor instead.
func (*Alert_Query) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Alert_Query) GetCreatedNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedNotBefore
	}
	return nil
}

func (x *Alert_Query) GetCreatedNotAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedNotAfter
	}
	return nil
}

func (x *Alert_Query) GetSeverityNotBelow() int32 {
	if x != nil {
		return x.SeverityNotBelow
	}
	return 0
}

func (x *Alert_Query) GetSeverityNotAbove() int32 {
	if x != nil {
		return x.SeverityNotAbove
	}
	return 0
}

func (x *Alert_Query) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *Alert_Query) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Alert_Query) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type PullAlertsResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device that emitted this change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The type of change (e.g. ADD, UPDATE, etc...)
	Type types.ChangeType `protobuf:"varint,2,opt,name=type,proto3,enum=smartcore.types.ChangeType" json:"type,omitempty"`
	// The new value to use for ADD|UPDATE changes
	NewValue *Alert `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	// The old value to use for UPDATE|REMOVE changes
	OldValue *Alert `protobuf:"bytes,4,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	// When the change occurred
	ChangeTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
}

func (x *PullAlertsResponse_Change) Reset() {
	*x = PullAlertsResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alerts_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullAlertsResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAlertsResponse_Change) ProtoMessage() {}

func (x *PullAlertsResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_alerts_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAlertsResponse_Change.ProtoReflect.Descriptor instead.
func (*PullAlertsResponse_Change) Descriptor() ([]byte, []int) {
	return file_alerts_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PullAlertsResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullAlertsResponse_Change) GetType() types.ChangeType {
	if x != nil {
		return x.Type
	}
	return types.ChangeType(0)
}

func (x *PullAlertsResponse_Change) GetNewValue() *Alert {
	if x != nil {
		return x.NewValue
	}
	return nil
}

func (x *PullAlertsResponse_Change) GetOldValue() *Alert {
	if x != nil {
		return x.OldValue
	}
	return nil
}

func (x *PullAlertsResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

var File_alerts_proto protoreflect.FileDescriptor

var file_alerts_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x06, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0f,
	0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73,
	0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x58, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0xb7, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x62, 0x65,
	0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x42, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x12, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x62, 0x6f, 0x76,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x4e, 0x6f, 0x74, 0x41, 0x62, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x58, 0x0a, 0x08, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x56, 0x45,
	0x52, 0x45, 0x10, 0x11, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x53, 0x41, 0x46,
	0x45, 0x54, 0x59, 0x10, 0x15, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e,
	0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x91, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65,
	0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0xc8, 0x02, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0xee,
	0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e,
	0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65,
	0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5d, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xd0, 0x02, 0x0a, 0x08, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x70, 0x69, 0x12, 0x4f,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1f, 0x2e,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x4e, 0x0a, 0x10, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x25, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62,
	0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x50, 0x0a, 0x12, 0x55, 0x6e, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x25, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69,
	0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x32, 0xef, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73,
	0x70, 0x2e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e,
	0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x76, 0x61,
	0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0x20, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e,
	0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x62,
	0x73, 0x70, 0x2d, 0x65, 0x77, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_alerts_proto_rawDescOnce sync.Once
	file_alerts_proto_rawDescData = file_alerts_proto_rawDesc
)

func file_alerts_proto_rawDescGZIP() []byte {
	file_alerts_proto_rawDescOnce.Do(func() {
		file_alerts_proto_rawDescData = protoimpl.X.CompressGZIP(file_alerts_proto_rawDescData)
	})
	return file_alerts_proto_rawDescData
}

var file_alerts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_alerts_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_alerts_proto_goTypes = []interface{}{
	(Alert_Severity)(0),               // 0: vanti.bsp.ew.Alert.Severity
	(*Alert)(nil),                     // 1: vanti.bsp.ew.Alert
	(*ListAlertsRequest)(nil),         // 2: vanti.bsp.ew.ListAlertsRequest
	(*ListAlertsResponse)(nil),        // 3: vanti.bsp.ew.ListAlertsResponse
	(*PullAlertsRequest)(nil),         // 4: vanti.bsp.ew.PullAlertsRequest
	(*PullAlertsResponse)(nil),        // 5: vanti.bsp.ew.PullAlertsResponse
	(*AcknowledgeAlertRequest)(nil),   // 6: vanti.bsp.ew.AcknowledgeAlertRequest
	(*CreateAlertRequest)(nil),        // 7: vanti.bsp.ew.CreateAlertRequest
	(*UpdateAlertRequest)(nil),        // 8: vanti.bsp.ew.UpdateAlertRequest
	(*DeleteAlertRequest)(nil),        // 9: vanti.bsp.ew.DeleteAlertRequest
	(*DeleteAlertResponse)(nil),       // 10: vanti.bsp.ew.DeleteAlertResponse
	(*Alert_Acknowledgement)(nil),     // 11: vanti.bsp.ew.Alert.Acknowledgement
	(*Alert_Query)(nil),               // 12: vanti.bsp.ew.Alert.Query
	(*PullAlertsResponse_Change)(nil), // 13: vanti.bsp.ew.PullAlertsResponse.Change
	(*timestamppb.Timestamp)(nil),     // 14: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),     // 15: google.protobuf.FieldMask
	(types.ChangeType)(0),             // 16: smartcore.types.ChangeType
}
var file_alerts_proto_depIdxs = []int32{
	14, // 0: vanti.bsp.ew.Alert.create_time:type_name -> google.protobuf.Timestamp
	11, // 1: vanti.bsp.ew.Alert.acknowledgement:type_name -> vanti.bsp.ew.Alert.Acknowledgement
	0,  // 2: vanti.bsp.ew.Alert.severity:type_name -> vanti.bsp.ew.Alert.Severity
	15, // 3: vanti.bsp.ew.ListAlertsRequest.read_mask:type_name -> google.protobuf.FieldMask
	12, // 4: vanti.bsp.ew.ListAlertsRequest.query:type_name -> vanti.bsp.ew.Alert.Query
	1,  // 5: vanti.bsp.ew.ListAlertsResponse.alerts:type_name -> vanti.bsp.ew.Alert
	15, // 6: vanti.bsp.ew.PullAlertsRequest.read_mask:type_name -> google.protobuf.FieldMask
	12, // 7: vanti.bsp.ew.PullAlertsRequest.query:type_name -> vanti.bsp.ew.Alert.Query
	13, // 8: vanti.bsp.ew.PullAlertsResponse.changes:type_name -> vanti.bsp.ew.PullAlertsResponse.Change
	1,  // 9: vanti.bsp.ew.CreateAlertRequest.alert:type_name -> vanti.bsp.ew.Alert
	1,  // 10: vanti.bsp.ew.UpdateAlertRequest.alert:type_name -> vanti.bsp.ew.Alert
	15, // 11: vanti.bsp.ew.UpdateAlertRequest.update_mask:type_name -> google.protobuf.FieldMask
	14, // 12: vanti.bsp.ew.Alert.Acknowledgement.acknowledge_time:type_name -> google.protobuf.Timestamp
	14, // 13: vanti.bsp.ew.Alert.Query.created_not_before:type_name -> google.protobuf.Timestamp
	14, // 14: vanti.bsp.ew.Alert.Query.created_not_after:type_name -> google.protobuf.Timestamp
	16, // 15: vanti.bsp.ew.PullAlertsResponse.Change.type:type_name -> smartcore.types.ChangeType
	1,  // 16: vanti.bsp.ew.PullAlertsResponse.Change.new_value:type_name -> vanti.bsp.ew.Alert
	1,  // 17: vanti.bsp.ew.PullAlertsResponse.Change.old_value:type_name -> vanti.bsp.ew.Alert
	14, // 18: vanti.bsp.ew.PullAlertsResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	2,  // 19: vanti.bsp.ew.AlertApi.ListAlerts:input_type -> vanti.bsp.ew.ListAlertsRequest
	4,  // 20: vanti.bsp.ew.AlertApi.PullAlerts:input_type -> vanti.bsp.ew.PullAlertsRequest
	6,  // 21: vanti.bsp.ew.AlertApi.AcknowledgeAlert:input_type -> vanti.bsp.ew.AcknowledgeAlertRequest
	6,  // 22: vanti.bsp.ew.AlertApi.UnacknowledgeAlert:input_type -> vanti.bsp.ew.AcknowledgeAlertRequest
	7,  // 23: vanti.bsp.ew.AlertAdminApi.CreateAlert:input_type -> vanti.bsp.ew.CreateAlertRequest
	8,  // 24: vanti.bsp.ew.AlertAdminApi.UpdateAlert:input_type -> vanti.bsp.ew.UpdateAlertRequest
	9,  // 25: vanti.bsp.ew.AlertAdminApi.DeleteAlert:input_type -> vanti.bsp.ew.DeleteAlertRequest
	3,  // 26: vanti.bsp.ew.AlertApi.ListAlerts:output_type -> vanti.bsp.ew.ListAlertsResponse
	5,  // 27: vanti.bsp.ew.AlertApi.PullAlerts:output_type -> vanti.bsp.ew.PullAlertsResponse
	1,  // 28: vanti.bsp.ew.AlertApi.AcknowledgeAlert:output_type -> vanti.bsp.ew.Alert
	1,  // 29: vanti.bsp.ew.AlertApi.UnacknowledgeAlert:output_type -> vanti.bsp.ew.Alert
	1,  // 30: vanti.bsp.ew.AlertAdminApi.CreateAlert:output_type -> vanti.bsp.ew.Alert
	1,  // 31: vanti.bsp.ew.AlertAdminApi.UpdateAlert:output_type -> vanti.bsp.ew.Alert
	10, // 32: vanti.bsp.ew.AlertAdminApi.DeleteAlert:output_type -> vanti.bsp.ew.DeleteAlertResponse
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_alerts_proto_init() }
func file_alerts_proto_init() {
	if File_alerts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_alerts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_Acknowledgement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alerts_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullAlertsResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alerts_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_alerts_proto_goTypes,
		DependencyIndexes: file_alerts_proto_depIdxs,
		EnumInfos:         file_alerts_proto_enumTypes,
		MessageInfos:      file_alerts_proto_msgTypes,
	}.Build()
	File_alerts_proto = out.File
	file_alerts_proto_rawDesc = nil
	file_alerts_proto_goTypes = nil
	file_alerts_proto_depIdxs = nil
}
