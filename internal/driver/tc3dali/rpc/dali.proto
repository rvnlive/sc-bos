syntax = "proto3";

package vanti.bsp.ew.driver.dali;

option go_package = "github.com/vanti-dev/bsp-ew/internal/driver/tc3dali/rpc";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

service DaliApi {
  // Group commands
  rpc AddToGroup(AddToGroupRequest) returns (AddToGroupResponse);
  rpc RemoveFromGroup(RemoveFromGroupRequest) returns (RemoveFromGroupResponse);
  rpc GetGroupMembership(GetGroupMembershipRequest) returns (GetGroupMembershipResponse);

  // Emergency Light commands
  rpc GetEmergencyStatus(GetEmergencyStatusRequest) returns (EmergencyStatus);
  rpc Identify(IdentifyRequest) returns (IdentifyResponse);
  rpc StartTest(StartTestRequest) returns (StartTestResponse);
  rpc StopTest(StopTestRequest) returns (StopTestResponse);
  rpc GetTestResult(GetTestResultRequest) returns (TestResult);
}

message GetGroupMembershipRequest {
  string name = 1;
}
message GetGroupMembershipResponse {
  repeated int32 groups = 1;
}

message AddToGroupRequest {
  string name = 1;
  int32 group = 2;
}
message AddToGroupResponse {}

message RemoveFromGroupRequest {
  string name = 1;
  int32 group = 2;
}
message RemoveFromGroupResponse {}

enum Test {
  TEST_UNKNOWN = 0;
  NO_TEST = 1;
  FUNCTION_TEST = 2;
  DURATION_TEST = 3;
}

message EmergencyStatus {
  enum Mode {
    MODE_UNSPECIFIED = 0;
    REST = 1;
    NORMAL = 3;
    EMERGENCY = 4;
    EXTENDED_EMERGENCY = 5;
    FUNCTION_TEST_ACTIVE = 6;
    DURATION_TEST_ACTIVE = 7;
    HARDWIRED_INHIBIT = 8;
    HARDWIRED_SWITCH = 9;
  }

  repeated Mode active_modes = 1;

  repeated Test pending_tests = 2;
  repeated Test overdue_tests = 3;
  repeated Test results_available = 4;

  bool inhibit_active = 5;
  bool identification_active = 6;
  bool circuit_failure = 7;
  bool battery_failure = 8;
  bool lamp_failure = 9;
  float battery_level_percent = 10;
}

message GetEmergencyStatusRequest {
  string name = 1;
}

message IdentifyRequest {
  string name = 1;
}
message IdentifyResponse {}

message StartTestRequest {
  string name = 1;
  Test test = 2;
}
message StartTestResponse {}

message StopTestRequest {
  string name = 1;
}
message StopTestResponse {}

message UpdateTestIntervalRequest {
  string name = 1;
  Test test = 2;
  // The target test interval to use. Because test intervals are highly quantised in DALI, this may be rounded.
  // The actual value used will be returned in UpdateTestIntervalResponse.interval
  google.protobuf.Duration interval = 3;
}
message UpdateTestIntervalResponse {
  // The test interval set, after rounding has been performed.
  google.protobuf.Duration interval = 1;
}

message TestResult {
  Test test = 1;
  google.protobuf.Timestamp completed_after = 2;
  google.protobuf.Timestamp completed_before = 3;
  bool pass = 4;
  google.protobuf.Duration duration = 5;
  string etag = 6;
}

message GetTestResultRequest {
  string name = 1;
  Test test = 2;
}

message AcknowledgeTestResultRequest {
  string name = 1;
  Test test = 2;
  string etag = 3;
}
message AcknowledgeTestResultResponse {}