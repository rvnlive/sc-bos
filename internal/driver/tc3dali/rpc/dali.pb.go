// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: internal/driver/tc3dali/rpc/dali.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Test int32

const (
	Test_TEST_UNKNOWN  Test = 0
	Test_NO_TEST       Test = 1
	Test_FUNCTION_TEST Test = 2
	Test_DURATION_TEST Test = 3
)

// Enum value maps for Test.
var (
	Test_name = map[int32]string{
		0: "TEST_UNKNOWN",
		1: "NO_TEST",
		2: "FUNCTION_TEST",
		3: "DURATION_TEST",
	}
	Test_value = map[string]int32{
		"TEST_UNKNOWN":  0,
		"NO_TEST":       1,
		"FUNCTION_TEST": 2,
		"DURATION_TEST": 3,
	}
)

func (x Test) Enum() *Test {
	p := new(Test)
	*p = x
	return p
}

func (x Test) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Test) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_driver_tc3dali_rpc_dali_proto_enumTypes[0].Descriptor()
}

func (Test) Type() protoreflect.EnumType {
	return &file_internal_driver_tc3dali_rpc_dali_proto_enumTypes[0]
}

func (x Test) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Test.Descriptor instead.
func (Test) EnumDescriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{0}
}

type EmergencyStatus_Mode int32

const (
	EmergencyStatus_MODE_UNSPECIFIED     EmergencyStatus_Mode = 0
	EmergencyStatus_REST                 EmergencyStatus_Mode = 1
	EmergencyStatus_NORMAL               EmergencyStatus_Mode = 3
	EmergencyStatus_EMERGENCY            EmergencyStatus_Mode = 4
	EmergencyStatus_EXTENDED_EMERGENCY   EmergencyStatus_Mode = 5
	EmergencyStatus_FUNCTION_TEST_ACTIVE EmergencyStatus_Mode = 6
	EmergencyStatus_DURATION_TEST_ACTIVE EmergencyStatus_Mode = 7
	EmergencyStatus_HARDWIRED_INHIBIT    EmergencyStatus_Mode = 8
	EmergencyStatus_HARDWIRED_SWITCH     EmergencyStatus_Mode = 9
)

// Enum value maps for EmergencyStatus_Mode.
var (
	EmergencyStatus_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "REST",
		3: "NORMAL",
		4: "EMERGENCY",
		5: "EXTENDED_EMERGENCY",
		6: "FUNCTION_TEST_ACTIVE",
		7: "DURATION_TEST_ACTIVE",
		8: "HARDWIRED_INHIBIT",
		9: "HARDWIRED_SWITCH",
	}
	EmergencyStatus_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED":     0,
		"REST":                 1,
		"NORMAL":               3,
		"EMERGENCY":            4,
		"EXTENDED_EMERGENCY":   5,
		"FUNCTION_TEST_ACTIVE": 6,
		"DURATION_TEST_ACTIVE": 7,
		"HARDWIRED_INHIBIT":    8,
		"HARDWIRED_SWITCH":     9,
	}
)

func (x EmergencyStatus_Mode) Enum() *EmergencyStatus_Mode {
	p := new(EmergencyStatus_Mode)
	*p = x
	return p
}

func (x EmergencyStatus_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmergencyStatus_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_driver_tc3dali_rpc_dali_proto_enumTypes[1].Descriptor()
}

func (EmergencyStatus_Mode) Type() protoreflect.EnumType {
	return &file_internal_driver_tc3dali_rpc_dali_proto_enumTypes[1]
}

func (x EmergencyStatus_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmergencyStatus_Mode.Descriptor instead.
func (EmergencyStatus_Mode) EnumDescriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{6, 0}
}

type EmergencyStatus_Failure int32

const (
	EmergencyStatus_FAILURE_UNSPECIFIED      EmergencyStatus_Failure = 0
	EmergencyStatus_CIRCUIT_FAILURE          EmergencyStatus_Failure = 1
	EmergencyStatus_BATTERY_DURATION_FAILURE EmergencyStatus_Failure = 2
	EmergencyStatus_BATTERY_FAILURE          EmergencyStatus_Failure = 3
	EmergencyStatus_LAMP_FAILURE             EmergencyStatus_Failure = 4
	EmergencyStatus_FUNCTION_TEST_FAILED     EmergencyStatus_Failure = 5
	EmergencyStatus_DURATION_TEST_FAILED     EmergencyStatus_Failure = 6
)

// Enum value maps for EmergencyStatus_Failure.
var (
	EmergencyStatus_Failure_name = map[int32]string{
		0: "FAILURE_UNSPECIFIED",
		1: "CIRCUIT_FAILURE",
		2: "BATTERY_DURATION_FAILURE",
		3: "BATTERY_FAILURE",
		4: "LAMP_FAILURE",
		5: "FUNCTION_TEST_FAILED",
		6: "DURATION_TEST_FAILED",
	}
	EmergencyStatus_Failure_value = map[string]int32{
		"FAILURE_UNSPECIFIED":      0,
		"CIRCUIT_FAILURE":          1,
		"BATTERY_DURATION_FAILURE": 2,
		"BATTERY_FAILURE":          3,
		"LAMP_FAILURE":             4,
		"FUNCTION_TEST_FAILED":     5,
		"DURATION_TEST_FAILED":     6,
	}
)

func (x EmergencyStatus_Failure) Enum() *EmergencyStatus_Failure {
	p := new(EmergencyStatus_Failure)
	*p = x
	return p
}

func (x EmergencyStatus_Failure) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmergencyStatus_Failure) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_driver_tc3dali_rpc_dali_proto_enumTypes[2].Descriptor()
}

func (EmergencyStatus_Failure) Type() protoreflect.EnumType {
	return &file_internal_driver_tc3dali_rpc_dali_proto_enumTypes[2]
}

func (x EmergencyStatus_Failure) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmergencyStatus_Failure.Descriptor instead.
func (EmergencyStatus_Failure) EnumDescriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{6, 1}
}

type GetGroupMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetGroupMembershipRequest) Reset() {
	*x = GetGroupMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembershipRequest) ProtoMessage() {}

func (x *GetGroupMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembershipRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMembershipRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{0}
}

func (x *GetGroupMembershipRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetGroupMembershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []int32 `protobuf:"varint,1,rep,packed,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupMembershipResponse) Reset() {
	*x = GetGroupMembershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembershipResponse) ProtoMessage() {}

func (x *GetGroupMembershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembershipResponse.ProtoReflect.Descriptor instead.
func (*GetGroupMembershipResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{1}
}

func (x *GetGroupMembershipResponse) GetGroups() []int32 {
	if x != nil {
		return x.Groups
	}
	return nil
}

type AddToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Group int32  `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *AddToGroupRequest) Reset() {
	*x = AddToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGroupRequest) ProtoMessage() {}

func (x *AddToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddToGroupRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{2}
}

func (x *AddToGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddToGroupRequest) GetGroup() int32 {
	if x != nil {
		return x.Group
	}
	return 0
}

type AddToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddToGroupResponse) Reset() {
	*x = AddToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGroupResponse) ProtoMessage() {}

func (x *AddToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGroupResponse.ProtoReflect.Descriptor instead.
func (*AddToGroupResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{3}
}

type RemoveFromGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Group int32  `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *RemoveFromGroupRequest) Reset() {
	*x = RemoveFromGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromGroupRequest) ProtoMessage() {}

func (x *RemoveFromGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromGroupRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveFromGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoveFromGroupRequest) GetGroup() int32 {
	if x != nil {
		return x.Group
	}
	return 0
}

type RemoveFromGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveFromGroupResponse) Reset() {
	*x = RemoveFromGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromGroupResponse) ProtoMessage() {}

func (x *RemoveFromGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromGroupResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromGroupResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{5}
}

type EmergencyStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveModes          []EmergencyStatus_Mode    `protobuf:"varint,1,rep,packed,name=active_modes,json=activeModes,proto3,enum=vanti.bsp.ew.driver.dali.EmergencyStatus_Mode" json:"active_modes,omitempty"`
	PendingTests         []Test                    `protobuf:"varint,2,rep,packed,name=pending_tests,json=pendingTests,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"pending_tests,omitempty"`
	OverdueTests         []Test                    `protobuf:"varint,3,rep,packed,name=overdue_tests,json=overdueTests,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"overdue_tests,omitempty"`
	ResultsAvailable     []Test                    `protobuf:"varint,4,rep,packed,name=results_available,json=resultsAvailable,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"results_available,omitempty"`
	InhibitActive        bool                      `protobuf:"varint,5,opt,name=inhibit_active,json=inhibitActive,proto3" json:"inhibit_active,omitempty"`
	IdentificationActive bool                      `protobuf:"varint,6,opt,name=identification_active,json=identificationActive,proto3" json:"identification_active,omitempty"`
	BatteryLevelPercent  float32                   `protobuf:"fixed32,7,opt,name=battery_level_percent,json=batteryLevelPercent,proto3" json:"battery_level_percent,omitempty"`
	Failures             []EmergencyStatus_Failure `protobuf:"varint,8,rep,packed,name=failures,proto3,enum=vanti.bsp.ew.driver.dali.EmergencyStatus_Failure" json:"failures,omitempty"`
}

func (x *EmergencyStatus) Reset() {
	*x = EmergencyStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmergencyStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmergencyStatus) ProtoMessage() {}

func (x *EmergencyStatus) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmergencyStatus.ProtoReflect.Descriptor instead.
func (*EmergencyStatus) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{6}
}

func (x *EmergencyStatus) GetActiveModes() []EmergencyStatus_Mode {
	if x != nil {
		return x.ActiveModes
	}
	return nil
}

func (x *EmergencyStatus) GetPendingTests() []Test {
	if x != nil {
		return x.PendingTests
	}
	return nil
}

func (x *EmergencyStatus) GetOverdueTests() []Test {
	if x != nil {
		return x.OverdueTests
	}
	return nil
}

func (x *EmergencyStatus) GetResultsAvailable() []Test {
	if x != nil {
		return x.ResultsAvailable
	}
	return nil
}

func (x *EmergencyStatus) GetInhibitActive() bool {
	if x != nil {
		return x.InhibitActive
	}
	return false
}

func (x *EmergencyStatus) GetIdentificationActive() bool {
	if x != nil {
		return x.IdentificationActive
	}
	return false
}

func (x *EmergencyStatus) GetBatteryLevelPercent() float32 {
	if x != nil {
		return x.BatteryLevelPercent
	}
	return 0
}

func (x *EmergencyStatus) GetFailures() []EmergencyStatus_Failure {
	if x != nil {
		return x.Failures
	}
	return nil
}

type GetEmergencyStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetEmergencyStatusRequest) Reset() {
	*x = GetEmergencyStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmergencyStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmergencyStatusRequest) ProtoMessage() {}

func (x *GetEmergencyStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmergencyStatusRequest.ProtoReflect.Descriptor instead.
func (*GetEmergencyStatusRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{7}
}

func (x *GetEmergencyStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IdentifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IdentifyRequest) Reset() {
	*x = IdentifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyRequest) ProtoMessage() {}

func (x *IdentifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyRequest.ProtoReflect.Descriptor instead.
func (*IdentifyRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{8}
}

func (x *IdentifyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IdentifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IdentifyResponse) Reset() {
	*x = IdentifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyResponse) ProtoMessage() {}

func (x *IdentifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyResponse.ProtoReflect.Descriptor instead.
func (*IdentifyResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{9}
}

type StartTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Test Test   `protobuf:"varint,2,opt,name=test,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"test,omitempty"`
}

func (x *StartTestRequest) Reset() {
	*x = StartTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTestRequest) ProtoMessage() {}

func (x *StartTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTestRequest.ProtoReflect.Descriptor instead.
func (*StartTestRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{10}
}

func (x *StartTestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartTestRequest) GetTest() Test {
	if x != nil {
		return x.Test
	}
	return Test_TEST_UNKNOWN
}

type StartTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartTestResponse) Reset() {
	*x = StartTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTestResponse) ProtoMessage() {}

func (x *StartTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTestResponse.ProtoReflect.Descriptor instead.
func (*StartTestResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{11}
}

type StopTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StopTestRequest) Reset() {
	*x = StopTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTestRequest) ProtoMessage() {}

func (x *StopTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTestRequest.ProtoReflect.Descriptor instead.
func (*StopTestRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{12}
}

func (x *StopTestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StopTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTestResponse) Reset() {
	*x = StopTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTestResponse) ProtoMessage() {}

func (x *StopTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTestResponse.ProtoReflect.Descriptor instead.
func (*StopTestResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{13}
}

type UpdateTestIntervalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Test Test   `protobuf:"varint,2,opt,name=test,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"test,omitempty"`
	// The target test interval to use. Because test intervals are highly quantised in DALI, this may be rounded.
	// The actual value used will be returned in UpdateTestIntervalResponse.interval
	Interval *durationpb.Duration `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *UpdateTestIntervalRequest) Reset() {
	*x = UpdateTestIntervalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestIntervalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestIntervalRequest) ProtoMessage() {}

func (x *UpdateTestIntervalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestIntervalRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestIntervalRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTestIntervalRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTestIntervalRequest) GetTest() Test {
	if x != nil {
		return x.Test
	}
	return Test_TEST_UNKNOWN
}

func (x *UpdateTestIntervalRequest) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

type UpdateTestIntervalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The test interval set, after rounding has been performed.
	Interval *durationpb.Duration `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *UpdateTestIntervalResponse) Reset() {
	*x = UpdateTestIntervalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestIntervalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestIntervalResponse) ProtoMessage() {}

func (x *UpdateTestIntervalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestIntervalResponse.ProtoReflect.Descriptor instead.
func (*UpdateTestIntervalResponse) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateTestIntervalResponse) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

type TestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Test     Test                 `protobuf:"varint,1,opt,name=test,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"test,omitempty"`
	Pass     bool                 `protobuf:"varint,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"` // only present for duration tests
	Etag     string               `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{16}
}

func (x *TestResult) GetTest() Test {
	if x != nil {
		return x.Test
	}
	return Test_TEST_UNKNOWN
}

func (x *TestResult) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

func (x *TestResult) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *TestResult) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type GetTestResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Test Test   `protobuf:"varint,2,opt,name=test,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"test,omitempty"`
}

func (x *GetTestResultRequest) Reset() {
	*x = GetTestResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestResultRequest) ProtoMessage() {}

func (x *GetTestResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestResultRequest.ProtoReflect.Descriptor instead.
func (*GetTestResultRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{17}
}

func (x *GetTestResultRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTestResultRequest) GetTest() Test {
	if x != nil {
		return x.Test
	}
	return Test_TEST_UNKNOWN
}

type DeleteTestResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Test Test   `protobuf:"varint,2,opt,name=test,proto3,enum=vanti.bsp.ew.driver.dali.Test" json:"test,omitempty"` // which kind of test result are we trying to delete?
	Etag string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`                                     // if present, the delete operation will fail unless the provided etag matches the stored etag
}

func (x *DeleteTestResultRequest) Reset() {
	*x = DeleteTestResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestResultRequest) ProtoMessage() {}

func (x *DeleteTestResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestResultRequest.ProtoReflect.Descriptor instead.
func (*DeleteTestResultRequest) Descriptor() ([]byte, []int) {
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteTestResultRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteTestResultRequest) GetTest() Test {
	if x != nil {
		return x.Test
	}
	return Test_TEST_UNKNOWN
}

func (x *DeleteTestResultRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

var File_internal_driver_tc3dali_rpc_dali_proto protoreflect.FileDescriptor

var file_internal_driver_tc3dali_rpc_dali_proto_rawDesc = []byte{
	0x0a, 0x26, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2f, 0x74, 0x63, 0x33, 0x64, 0x61, 0x6c, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x61,
	0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e,
	0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61,
	0x6c, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x42, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a,
	0x07, 0x0a, 0x0f, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69,
	0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64,
	0x61, 0x6c, 0x69, 0x2e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x75, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x4b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6e,
	0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x68, 0x69, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x68, 0x69, 0x62, 0x69, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x08,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x31,
	0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45,
	0x53, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x04, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x45, 0x4d, 0x45, 0x52,
	0x47, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x55, 0x4e, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45,
	0x53, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x48,
	0x41, 0x52, 0x44, 0x57, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x48, 0x49, 0x42, 0x49, 0x54,
	0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x41, 0x52, 0x44, 0x57, 0x49, 0x52, 0x45, 0x44, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x09, 0x22, 0xb0, 0x01, 0x0a, 0x07, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x49, 0x52, 0x43, 0x55, 0x49, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x5f, 0x44, 0x55,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4d, 0x50, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x55, 0x4e, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45,
	0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x2f, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0f,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74,
	0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e,
	0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x22, 0x53, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65,
	0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x22, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70,
	0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x2a, 0x4b,
	0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x54,
	0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x55, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10, 0x03, 0x32, 0xe1, 0x07, 0x0a, 0x07,
	0x44, 0x61, 0x6c, 0x69, 0x41, 0x70, 0x69, 0x12, 0x67, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2b, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73,
	0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65,
	0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x30, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e,
	0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73,
	0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x33,
	0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e,
	0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x33, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70,
	0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e,
	0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x61, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x29, 0x2e, 0x76, 0x61,
	0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62,
	0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c,
	0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x61,
	0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70,
	0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76,
	0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x6b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x2e, 0x76, 0x61, 0x6e, 0x74, 0x69, 0x2e, 0x62,
	0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x6c,
	0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x61, 0x6e, 0x74,
	0x69, 0x2e, 0x62, 0x73, 0x70, 0x2e, 0x65, 0x77, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x64, 0x61, 0x6c, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61,
	0x6e, 0x74, 0x69, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x62, 0x73, 0x70, 0x2d, 0x65, 0x77, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2f, 0x74,
	0x63, 0x33, 0x64, 0x61, 0x6c, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_internal_driver_tc3dali_rpc_dali_proto_rawDescOnce sync.Once
	file_internal_driver_tc3dali_rpc_dali_proto_rawDescData = file_internal_driver_tc3dali_rpc_dali_proto_rawDesc
)

func file_internal_driver_tc3dali_rpc_dali_proto_rawDescGZIP() []byte {
	file_internal_driver_tc3dali_rpc_dali_proto_rawDescOnce.Do(func() {
		file_internal_driver_tc3dali_rpc_dali_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_driver_tc3dali_rpc_dali_proto_rawDescData)
	})
	return file_internal_driver_tc3dali_rpc_dali_proto_rawDescData
}

var file_internal_driver_tc3dali_rpc_dali_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_driver_tc3dali_rpc_dali_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_internal_driver_tc3dali_rpc_dali_proto_goTypes = []interface{}{
	(Test)(0),                          // 0: vanti.bsp.ew.driver.dali.Test
	(EmergencyStatus_Mode)(0),          // 1: vanti.bsp.ew.driver.dali.EmergencyStatus.Mode
	(EmergencyStatus_Failure)(0),       // 2: vanti.bsp.ew.driver.dali.EmergencyStatus.Failure
	(*GetGroupMembershipRequest)(nil),  // 3: vanti.bsp.ew.driver.dali.GetGroupMembershipRequest
	(*GetGroupMembershipResponse)(nil), // 4: vanti.bsp.ew.driver.dali.GetGroupMembershipResponse
	(*AddToGroupRequest)(nil),          // 5: vanti.bsp.ew.driver.dali.AddToGroupRequest
	(*AddToGroupResponse)(nil),         // 6: vanti.bsp.ew.driver.dali.AddToGroupResponse
	(*RemoveFromGroupRequest)(nil),     // 7: vanti.bsp.ew.driver.dali.RemoveFromGroupRequest
	(*RemoveFromGroupResponse)(nil),    // 8: vanti.bsp.ew.driver.dali.RemoveFromGroupResponse
	(*EmergencyStatus)(nil),            // 9: vanti.bsp.ew.driver.dali.EmergencyStatus
	(*GetEmergencyStatusRequest)(nil),  // 10: vanti.bsp.ew.driver.dali.GetEmergencyStatusRequest
	(*IdentifyRequest)(nil),            // 11: vanti.bsp.ew.driver.dali.IdentifyRequest
	(*IdentifyResponse)(nil),           // 12: vanti.bsp.ew.driver.dali.IdentifyResponse
	(*StartTestRequest)(nil),           // 13: vanti.bsp.ew.driver.dali.StartTestRequest
	(*StartTestResponse)(nil),          // 14: vanti.bsp.ew.driver.dali.StartTestResponse
	(*StopTestRequest)(nil),            // 15: vanti.bsp.ew.driver.dali.StopTestRequest
	(*StopTestResponse)(nil),           // 16: vanti.bsp.ew.driver.dali.StopTestResponse
	(*UpdateTestIntervalRequest)(nil),  // 17: vanti.bsp.ew.driver.dali.UpdateTestIntervalRequest
	(*UpdateTestIntervalResponse)(nil), // 18: vanti.bsp.ew.driver.dali.UpdateTestIntervalResponse
	(*TestResult)(nil),                 // 19: vanti.bsp.ew.driver.dali.TestResult
	(*GetTestResultRequest)(nil),       // 20: vanti.bsp.ew.driver.dali.GetTestResultRequest
	(*DeleteTestResultRequest)(nil),    // 21: vanti.bsp.ew.driver.dali.DeleteTestResultRequest
	(*durationpb.Duration)(nil),        // 22: google.protobuf.Duration
}
var file_internal_driver_tc3dali_rpc_dali_proto_depIdxs = []int32{
	1,  // 0: vanti.bsp.ew.driver.dali.EmergencyStatus.active_modes:type_name -> vanti.bsp.ew.driver.dali.EmergencyStatus.Mode
	0,  // 1: vanti.bsp.ew.driver.dali.EmergencyStatus.pending_tests:type_name -> vanti.bsp.ew.driver.dali.Test
	0,  // 2: vanti.bsp.ew.driver.dali.EmergencyStatus.overdue_tests:type_name -> vanti.bsp.ew.driver.dali.Test
	0,  // 3: vanti.bsp.ew.driver.dali.EmergencyStatus.results_available:type_name -> vanti.bsp.ew.driver.dali.Test
	2,  // 4: vanti.bsp.ew.driver.dali.EmergencyStatus.failures:type_name -> vanti.bsp.ew.driver.dali.EmergencyStatus.Failure
	0,  // 5: vanti.bsp.ew.driver.dali.StartTestRequest.test:type_name -> vanti.bsp.ew.driver.dali.Test
	0,  // 6: vanti.bsp.ew.driver.dali.UpdateTestIntervalRequest.test:type_name -> vanti.bsp.ew.driver.dali.Test
	22, // 7: vanti.bsp.ew.driver.dali.UpdateTestIntervalRequest.interval:type_name -> google.protobuf.Duration
	22, // 8: vanti.bsp.ew.driver.dali.UpdateTestIntervalResponse.interval:type_name -> google.protobuf.Duration
	0,  // 9: vanti.bsp.ew.driver.dali.TestResult.test:type_name -> vanti.bsp.ew.driver.dali.Test
	22, // 10: vanti.bsp.ew.driver.dali.TestResult.duration:type_name -> google.protobuf.Duration
	0,  // 11: vanti.bsp.ew.driver.dali.GetTestResultRequest.test:type_name -> vanti.bsp.ew.driver.dali.Test
	0,  // 12: vanti.bsp.ew.driver.dali.DeleteTestResultRequest.test:type_name -> vanti.bsp.ew.driver.dali.Test
	5,  // 13: vanti.bsp.ew.driver.dali.DaliApi.AddToGroup:input_type -> vanti.bsp.ew.driver.dali.AddToGroupRequest
	7,  // 14: vanti.bsp.ew.driver.dali.DaliApi.RemoveFromGroup:input_type -> vanti.bsp.ew.driver.dali.RemoveFromGroupRequest
	3,  // 15: vanti.bsp.ew.driver.dali.DaliApi.GetGroupMembership:input_type -> vanti.bsp.ew.driver.dali.GetGroupMembershipRequest
	10, // 16: vanti.bsp.ew.driver.dali.DaliApi.GetEmergencyStatus:input_type -> vanti.bsp.ew.driver.dali.GetEmergencyStatusRequest
	11, // 17: vanti.bsp.ew.driver.dali.DaliApi.Identify:input_type -> vanti.bsp.ew.driver.dali.IdentifyRequest
	13, // 18: vanti.bsp.ew.driver.dali.DaliApi.StartTest:input_type -> vanti.bsp.ew.driver.dali.StartTestRequest
	15, // 19: vanti.bsp.ew.driver.dali.DaliApi.StopTest:input_type -> vanti.bsp.ew.driver.dali.StopTestRequest
	20, // 20: vanti.bsp.ew.driver.dali.DaliApi.GetTestResult:input_type -> vanti.bsp.ew.driver.dali.GetTestResultRequest
	21, // 21: vanti.bsp.ew.driver.dali.DaliApi.DeleteTestResult:input_type -> vanti.bsp.ew.driver.dali.DeleteTestResultRequest
	6,  // 22: vanti.bsp.ew.driver.dali.DaliApi.AddToGroup:output_type -> vanti.bsp.ew.driver.dali.AddToGroupResponse
	8,  // 23: vanti.bsp.ew.driver.dali.DaliApi.RemoveFromGroup:output_type -> vanti.bsp.ew.driver.dali.RemoveFromGroupResponse
	4,  // 24: vanti.bsp.ew.driver.dali.DaliApi.GetGroupMembership:output_type -> vanti.bsp.ew.driver.dali.GetGroupMembershipResponse
	9,  // 25: vanti.bsp.ew.driver.dali.DaliApi.GetEmergencyStatus:output_type -> vanti.bsp.ew.driver.dali.EmergencyStatus
	12, // 26: vanti.bsp.ew.driver.dali.DaliApi.Identify:output_type -> vanti.bsp.ew.driver.dali.IdentifyResponse
	14, // 27: vanti.bsp.ew.driver.dali.DaliApi.StartTest:output_type -> vanti.bsp.ew.driver.dali.StartTestResponse
	16, // 28: vanti.bsp.ew.driver.dali.DaliApi.StopTest:output_type -> vanti.bsp.ew.driver.dali.StopTestResponse
	19, // 29: vanti.bsp.ew.driver.dali.DaliApi.GetTestResult:output_type -> vanti.bsp.ew.driver.dali.TestResult
	19, // 30: vanti.bsp.ew.driver.dali.DaliApi.DeleteTestResult:output_type -> vanti.bsp.ew.driver.dali.TestResult
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_internal_driver_tc3dali_rpc_dali_proto_init() }
func file_internal_driver_tc3dali_rpc_dali_proto_init() {
	if File_internal_driver_tc3dali_rpc_dali_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmergencyStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmergencyStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestIntervalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestIntervalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_driver_tc3dali_rpc_dali_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_driver_tc3dali_rpc_dali_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_driver_tc3dali_rpc_dali_proto_goTypes,
		DependencyIndexes: file_internal_driver_tc3dali_rpc_dali_proto_depIdxs,
		EnumInfos:         file_internal_driver_tc3dali_rpc_dali_proto_enumTypes,
		MessageInfos:      file_internal_driver_tc3dali_rpc_dali_proto_msgTypes,
	}.Build()
	File_internal_driver_tc3dali_rpc_dali_proto = out.File
	file_internal_driver_tc3dali_rpc_dali_proto_rawDesc = nil
	file_internal_driver_tc3dali_rpc_dali_proto_goTypes = nil
	file_internal_driver_tc3dali_rpc_dali_proto_depIdxs = nil
}
