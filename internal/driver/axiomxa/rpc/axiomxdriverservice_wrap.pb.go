// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package rpc

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapAxiomXDriverService	adapts a rpc.AxiomXDriverServiceServer	and presents it as a rpc.AxiomXDriverServiceClient
func WrapAxiomXDriverService(server AxiomXDriverServiceServer) AxiomXDriverServiceClient {
	return &axiomXDriverServiceWrapper{server}
}

type axiomXDriverServiceWrapper struct {
	server AxiomXDriverServiceServer
}

// compile time check that we implement the interface we need
var _ AxiomXDriverServiceClient = (*axiomXDriverServiceWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *axiomXDriverServiceWrapper) UnwrapServer() AxiomXDriverServiceServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *axiomXDriverServiceWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *axiomXDriverServiceWrapper) SaveQRCredential(ctx context.Context, req *SaveQRCredentialRequest, _ ...grpc.CallOption) (*SaveQRCredentialResponse, error) {
	return w.server.SaveQRCredential(ctx, req)
}
