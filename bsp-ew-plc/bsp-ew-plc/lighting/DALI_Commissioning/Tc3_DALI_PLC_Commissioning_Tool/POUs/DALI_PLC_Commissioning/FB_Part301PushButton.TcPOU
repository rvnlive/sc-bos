<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="FB_Part301PushButton" Id="{db696cad-f7bc-4ebc-8c6d-b2b32487e24c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Part301PushButton
VAR_INPUT
	ipDALICommunication			:	I_DALICommunication;
END_VAR
VAR_OUTPUT
	bBusy						:	BOOL;
END_VAR
VAR
	{region "Visu"}
	sInputValue					:	STRING[25];
	nInstanceError				:	BYTE;
	nResolution					:	BYTE;
	eEventScheme				:	E_DALIEventScheme;
	nEventFilter				:	DWORD;
	nRepeat						:	UINT(100..2000);
	nStuck						:	BYTE(5..255);
	nShort						:	UINT(0..5100);
	nShortMin					:	UINT;
	nDouble						:	UINT(0..2000);
	nDoubleMin					:	UINT;
	bRead						:	BOOL;
	bWrite						:	BOOL;
	bEnable						:	BOOL;
	bButtonReleased				:	BOOL;
	bButtonPressed				:	BOOL;
	bShortPress					:	BOOL;
	bDoublePress				:	BOOL;
	bLongPressStart				:	BOOL;
	bLongPressRepeat			:	BOOL;
	bLongPressStop				:	BOOL;
	bButtonStuck				:	BOOL;
	bNoRepeatTimer				:	BOOL;
	bNoStuckTimer				:	BOOL;
	bNoShortTimer				:	BOOL;
	bNoDoubleTimer				:	BOOL;
	eEventPriority				:	E_DALIEventPriority := E_DALIEventPriority.Middle;
	{endregion}
	nStep						:	INT;
	nAddress					:	BYTE;
	nInstanceAddress			:	BYTE;
	bHideWaitSymbol				:	BOOL := TRUE;
	nInputValue					:	LWORD;
	nAddressInfo01				:	BYTE;
	nAddressInfo02				:	BYTE;

	fbGetInputNotification		:	FB_DALIGetInputNotification(0);
	fb103StartQuiescentMode		:	FB_DALI103StartQuiescentMode(0);
	fb103StopQuiescentMode		:	FB_DALI103StopQuiescentMode(0);
	fb103QueryInstanceError		:	FB_DALI103QueryInstanceError(0);
	fb103QueryInstanceStatus	:	FB_DALI103QueryInstanceStatus(0);
	fb103QueryResolution		:	FB_DALI103QueryResolution(0);
	fb103QueryInputValue		:	FB_DALI103QueryInputValue(0);
	fb103QueryEventScheme		:	FB_DALI103QueryEventScheme(0);
	fb103QueryEventFilter		:	FB_DALI103QueryEventFilter(0);
	fb103QueryEventPriority		:	FB_DALI103QueryEventPriority(0);
	fb301QueryRepeatTimer		:	FB_DALI301QueryRepeatTimer(0);
	fb301QueryStuckTimer		:	FB_DALI301QueryStuckTimer(0);
	fb301QueryShortTimer		:	FB_DALI301QueryShortTimer(0);
	fb301QueryShortTimerMin		:	FB_DALI301QueryShortTimerMin(0);
	fb301QueryDoubleTimer		:	FB_DALI301QueryDoubleTimer(0);
	fb301QueryDoubleTimerMin	:	FB_DALI301QueryDoubleTimerMin(0);
	fb103EnableInstance			:	FB_DALI103EnableInstance(0);
	fb103DisableInstance		:	FB_DALI103DisableInstance(0);
	fb103SetEventScheme			:	FB_DALI103SetEventScheme(0);
	fb103SetEventFilter			:	FB_DALI103SetEventFilter(0);
	fb103SetEventPriority		:	FB_DALI103SetEventPriority(0);
	fb301SetRepeatTimer			:	FB_DALI301SetRepeatTimer(0);
	fb301SetStuckTimer			:	FB_DALI301SetStuckTimer(0);
	fb301SetShortTimer			:	FB_DALI301SetShortTimer(0);
	fb301SetDoubleTimer			:	FB_DALI301SetDoubleTimer(0);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{region "Detect Commands"}
IF (bRead AND (nStep = 0)) THEN
	nStep := 5;
	bRead := FALSE;
	bHideWaitSymbol := FALSE;
END_IF

IF (bWrite AND (nStep = 0)) THEN
	nStep := 1000;
	bWrite := FALSE;
	bHideWaitSymbol := FALSE;
END_IF
{endregion}
{region "Manage Dialog Selection}
IF (nStep = 0) THEN
	bBusy := FALSE;
ELSE
	bBusy := TRUE;
END_IF
{endregion}
{region "Execute Commands"}
CASE nStep OF
0:
{region "Init"}
	bRead := FALSE;
	bWrite := FALSE;
	bHideWaitSymbol := TRUE;

	fbGetInputNotification.ipDALICommunication := ipDALICommunication;
	fb103StartQuiescentMode.ipDALICommunication := ipDALICommunication;
	fb103StopQuiescentMode.ipDALICommunication := ipDALICommunication;
	fb103QueryInstanceError.ipDALICommunication := ipDALICommunication;
	fb103QueryInstanceStatus.ipDALICommunication := ipDALICommunication;
	fb103QueryResolution.ipDALICommunication := ipDALICommunication;
	fb103QueryInputValue.ipDALICommunication := ipDALICommunication;
	fb103QueryEventScheme.ipDALICommunication := ipDALICommunication;
	fb103QueryEventFilter.ipDALICommunication := ipDALICommunication;
	fb103QueryEventPriority.ipDALICommunication := ipDALICommunication;
	fb301QueryRepeatTimer.ipDALICommunication := ipDALICommunication;
	fb301QueryStuckTimer.ipDALICommunication := ipDALICommunication;
	fb301QueryShortTimer.ipDALICommunication := ipDALICommunication;
	fb301QueryShortTimerMin.ipDALICommunication := ipDALICommunication;
	fb301QueryDoubleTimer.ipDALICommunication := ipDALICommunication;
	fb301QueryDoubleTimerMin.ipDALICommunication := ipDALICommunication;
	fb103EnableInstance.ipDALICommunication := ipDALICommunication;
	fb103DisableInstance.ipDALICommunication := ipDALICommunication;
	fb103SetEventScheme.ipDALICommunication := ipDALICommunication;
	fb103SetEventFilter.ipDALICommunication := ipDALICommunication;
	fb103SetEventPriority.ipDALICommunication := ipDALICommunication;
	fb301SetRepeatTimer.ipDALICommunication := ipDALICommunication;
	fb301SetStuckTimer.ipDALICommunication := ipDALICommunication;
	fb301SetShortTimer.ipDALICommunication := ipDALICommunication;
	fb301SetDoubleTimer.ipDALICommunication := ipDALICommunication;
{endregion}
{region "Read Notifications"}
	CASE eEventScheme OF
	0:
		nAddressInfo01 := 1;
		nAddressInfo02 := nInstanceAddress;
	1:
		nAddressInfo01 := nAddress;
		nAddressInfo02 := 1;
	2:
		nAddressInfo01 := nAddress;
		nAddressInfo02 := nInstanceAddress;
	END_CASE

	fbGetInputNotification(bEnable := TRUE,
						   eEventScheme := eEventScheme,
						   nAddressInfo1 := nAddressInfo01,
						   nAddressInfo2 := nAddressInfo02,
						   nEventInfo=> nInputValue);
	CASE fbGetInputNotification.nEventInfo OF
		0: sInputValue := 'Push button released';
		1: sInputValue := 'Push button pressed';
		2: sInputValue := 'Short press';
		5: sInputValue := 'Double press';
		9: sInputValue := 'Long press start';
		11: sInputValue := 'Long press repeat';
		12: sInputValue := 'Long press stop';
		14: sInputValue := 'Button free';
		15: sInputValue := 'Button stuck';
	END_CASE
{endregion}
{region "Read"}
5:
{region "Start Qiescent Mode"}
	fb103StartQuiescentMode(bStart := TRUE,
							eAddressType := Tc3_DALI.E_DALIAddressType.Broadcast,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	IF (NOT fb103StartQuiescentMode.bBusy) THEN
		fb103StartQuiescentMode(bStart:= FALSE);
		nStep := 10;
	END_IF
{endregion}
10:
{region "Query Instance Error"}
	fb103QueryInstanceError(bStart := TRUE,
							nAddress := nAddress,
							eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							nInstanceAddress := nInstanceAddress,
							eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
							nInstanceError=> nInstanceError);
	IF (NOT fb103QueryInstanceError.bBusy) THEN
		fb103QueryInstanceError(bStart:= FALSE);
		nStep := 20;
	END_IF
{endregion}
20:
{region "Query Instance Status"}
	fb103QueryInstanceStatus(bStart := TRUE,
							 nAddress := nAddress,
							 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							 nInstanceAddress := nInstanceAddress,
							 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	IF (NOT fb103QueryInstanceStatus.bBusy) THEN
		fb103QueryInstanceStatus(bStart := FALSE);
		IF (fb103QueryInstanceStatus.nInstanceStatus.1) THEN
			bEnable := TRUE;
		END_IF
		nStep := 30;
	END_IF
30:
{region "Query Resolution"}
	fb103QueryResolution(bStart := TRUE,
						 nAddress := nAddress,
						 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						 nInstanceAddress := nInstanceAddress,
						 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						 nResolution=> nResolution);
	IF (NOT fb103QueryResolution.bBusy) THEN
		fb103QueryResolution(bStart:= FALSE);
		nStep := 40;
	END_IF
{endregion}
40:
{region "Query Input Value"}
	fb103QueryInputValue(bStart := TRUE,
						 nAddress := nAddress,
						 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						 nInstanceAddress := nInstanceAddress,
						 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						 nResolution := nResolution);
	IF (NOT fb103QueryInputValue.bBusy) THEN
		fb103QueryInputValue(bStart:= FALSE);
		CASE fb103QueryInputValue.nInputValue OF
			0: sInputValue := 'Push button released';
			1: sInputValue := 'Push button pressed';
			2: sInputValue := 'Short press';
			5: sInputValue := 'Double press';
			9: sInputValue := 'Long press start';
			11: sInputValue := 'Long press repeat';
			12: sInputValue := 'Long press stop';
			14: sInputValue := 'Button free';
			15: sInputValue := 'Button stuck';
		END_CASE
		nStep := 50;
	END_IF
{endregion}
50:
{region "Query Event Scheme"}
	fb103QueryEventScheme(bStart := TRUE,
						  nAddress := nAddress,
						  eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						  nInstanceAddress := nInstanceAddress,
						  eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						  eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						  eEventScheme=> eEventScheme);
	IF (NOT fb103QueryEventScheme.bBusy) THEN
		fb103QueryEventScheme(bStart := FALSE);
		nStep := 60;
	END_IF
{endregion}
60:
{region "Query Event Filter"}
	fb103QueryEventFilter(bStart := TRUE,
						  nAddress := nAddress,
						  eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						  nInstanceAddress := nInstanceAddress,
						  eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						  eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						  nEventFilter=> nEventFilter);
	IF (NOT fb103QueryEventFilter.bBusy) THEN
		fb103QueryEventFilter(bStart := FALSE);
		bButtonReleased := nEventFilter.0;
		bButtonPressed := nEventFilter.1;
		bShortPress := nEventFilter.2;
		bDoublePress := nEventFilter.3;
		bLongPressStart := nEventFilter.4;
		bLongPressRepeat := nEventFilter.5;
		bLongPressStop := nEventFilter.6;
		bButtonStuck := nEventFilter.7;
		nStep := 70;
	END_IF
{endregion}
70:
{region "Query Repeat Timer"}
	fb301QueryRepeatTimer(bStart := TRUE,
						  nAddress := nAddress,
						  eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						  nInstanceAddress := nInstanceAddress,
						  eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						  eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	nRepeat := (fb301QueryRepeatTimer.nRepeat * 20);
	IF (NOT fb301QueryRepeatTimer.bBusy) THEN
		fb301QueryRepeatTimer(bStart := FALSE);
		nStep := 80;
	END_IF
{endregion}
80:
{region "Query Stuck Timer"}
	fb301QueryStuckTimer(bStart := TRUE,
						 nAddress := nAddress,
						 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						 nInstanceAddress := nInstanceAddress,
						 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						 nStuck=> nStuck);
	IF (NOT fb301QueryStuckTimer.bBusy) THEN
		fb301QueryStuckTimer(bStart := FALSE);
		nStep := 90;
	END_IF
{endregion}
90:
{region "Query Short Timer"}
	fb301QueryShortTimer(bStart := TRUE,
						 nAddress := nAddress,
						 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						 nInstanceAddress := nInstanceAddress,
						 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	nShort := (fb301QueryShortTimer.nShort * 20);
	IF (NOT fb301QueryShortTimer.bBusy) THEN
		fb301QueryShortTimer(bStart := FALSE);
		nStep := 95;
	END_IF
{endregion}
95:
{region "Query Short Timer Min"}
	fb301QueryShortTimerMin(bStart := TRUE,
							nAddress := nAddress,
							eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							nInstanceAddress := nInstanceAddress,
							eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	nShortMin := (fb301QueryShortTimerMin.nShortMin * 20);
	IF (NOT fb301QueryShortTimerMin.bBusy) THEN
		fb301QueryShortTimerMin(bStart := FALSE);
		nStep := 100;
	END_IF
{endregion}
100:
{region "Query Double Timer"}
	fb301QueryDoubleTimer(bStart := TRUE,
						  nAddress := nAddress,
						  eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						  nInstanceAddress := nInstanceAddress,
						  eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						  eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	nDouble := (fb301QueryDoubleTimer.nDouble * 20);
	IF (NOT fb301QueryDoubleTimer.bBusy) THEN
		fb301QueryDoubleTimer(bStart := FALSE);
		nStep := 105;
	END_IF
{endregion}
105:
{region "Query Double Timer"}
	fb301QueryDoubleTimerMin(bStart := TRUE,
							 nAddress := nAddress,
							 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							 nInstanceAddress := nInstanceAddress,
							 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	nDoubleMin := (fb301QueryDoubleTimerMin.nDoubleMin * 20);
	IF (NOT fb301QueryDoubleTimerMin.bBusy) THEN
		fb301QueryDoubleTimerMin(bStart := FALSE);
		nStep := 110;
	END_IF
{endregion}
110:
{region "Query Event Priority"}
	fb103QueryEventPriority(bStart := TRUE,
							nAddress := nAddress,
							eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							nInstanceAddress := nInstanceAddress,
							eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
							eEventPriority=> eEventPriority);
	IF (NOT fb103QueryEventPriority.bBusy) THEN
		fb103QueryEventPriority(bStart := FALSE);
		nStep := 120;
	END_IF 
{endregion}
120:
{region "Stop Qiescent Mode"}
	fb103StopQuiescentMode(bStart := TRUE,
						   eAddressType := Tc3_DALI.E_DALIAddressType.Broadcast,
						   eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
	IF (NOT fb103StopQuiescentMode.bBusy) THEN
		fb103StopQuiescentMode(	bStart:= FALSE);
		nStep := 0;
	END_IF
{endregion}
{endregion}
{region "Write"}
1000:
{region "Enable or Disable Instance"}
	IF (bEnable) THEN
		fb103EnableInstance(bStart := TRUE,
							nAddress := nAddress,
							eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							nInstanceAddress := nInstanceAddress,
							eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
		IF (NOT fb103EnableInstance.bBusy) THEN
			fb103EnableInstance(bStart := FALSE);
			nStep := 1010;
		END_IF
	ELSE
		fb103DisableInstance(bStart := TRUE,
							 nAddress := nAddress,
							 eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							 nInstanceAddress := nInstanceAddress,
							 eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							 eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle);
		IF (NOT fb103DisableInstance.bBusy) THEN
			fb103DisableInstance(bStart := FALSE);
			nStep := 0;
		END_IF
	END_IF
{endregion}
1010:
{region "Set Event Scheme"}
	fb103SetEventScheme(bStart := TRUE,
						nAddress := nAddress,
						eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						nInstanceAddress := nInstanceAddress,
						eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						eEventScheme := eEventScheme);
	IF (NOT fb103SetEventScheme.bBusy) THEN
		fb103SetEventScheme(bStart := FALSE);
		nStep := 1020;
	END_IF
{endregion}
1020:
{region "Set Event Filter"}
	nEventFilter.0 := bButtonReleased;
	nEventFilter.1 := bButtonPressed;
	nEventFilter.2 := bShortPress;
	nEventFilter.3 := bDoublePress;
	nEventFilter.4 := bLongPressStart;
	nEventFilter.5 := bLongPressRepeat;
	nEventFilter.6 := bLongPressStop;
	nEventFilter.7 := bButtonStuck;
	fb103SetEventFilter(bStart := TRUE,
						nAddress := nAddress,
						eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						nInstanceAddress := nInstanceAddress,
						eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						nEventFilter := nEventFilter);
	IF (NOT fb103SetEventFilter.bBusy) THEN
		fb103SetEventFilter(bStart:= FALSE);
		nStep := 1030;
	END_IF
{endregion}
1030:
{region "Set Repeat Timer"}
	IF (bNoRepeatTimer) THEN
		nStep := 1040;
	ELSE
		fb301SetRepeatTimer(bStart := TRUE,
							nAddress := nAddress,
							eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							nInstanceAddress := nInstanceAddress,
							eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
							nRepeat := TO_BYTE (nRepeat / 20));
		IF (NOT fb301SetRepeatTimer.bBusy) THEN
			fb301SetRepeatTimer(bStart:= FALSE);
			nStep := 1040;
		END_IF
	END_IF
{endregion}
1040:
{region "Set Stuck Timer"}
	IF (bNoStuckTimer) THEN
		nStep := 1050;
	ELSE
		fb301SetStuckTimer(bStart := TRUE,
						   nAddress := nAddress,
						   eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						   nInstanceAddress := nInstanceAddress,
						   eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						   eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						   nStuck := nStuck);
		IF (NOT fb301SetStuckTimer.bBusy) THEN
			fb301SetStuckTimer(bStart := FALSE);
			nStep := 1050;
		END_IF
	END_IF
{endregion}
1050:
{region "Set Short Timer"}
	IF (bNoShortTimer) THEN
		nStep := 1060;
	ELSE
		fb301SetShortTimer(bStart := TRUE,
						   nAddress := nAddress,
						   eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						   nInstanceAddress := nInstanceAddress,
						   eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						   eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						   nShort := TO_BYTE(nShort / 20));
		IF (NOT fb301SetShortTimer.bBusy) THEN
			fb301SetShortTimer(bStart := FALSE);
			nStep := 1060;
		END_IF
	END_IF
{endregion}
1060:
{region "Set Double Timer"}
	IF (bNoDoubleTimer) THEN
		nStep := 1070;
	ELSE
		fb301SetDoubleTimer(bStart := TRUE,
							nAddress := nAddress,
							eAddressType := Tc3_DALI.E_DALIAddressType.Short,
							nInstanceAddress := nInstanceAddress,
							eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
							eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
							nDouble := TO_BYTE(nDouble / 20));
		IF (NOT fb301SetDoubleTimer.bBusy) THEN
			fb301SetDoubleTimer(bStart := FALSE);
			nStep := 1070;
		END_IF
	END_IF
1070:
{region "Set Event Priority"}
	fb103SetEventPriority(bStart := TRUE,
						  nAddress := nAddress,
						  eAddressType := Tc3_DALI.E_DALIAddressType.Short,
						  nInstanceAddress := nInstanceAddress,
						  eInstanceAddressType := Tc3_DALI.E_DALIInstanceAddressType.InstanceNumber,
						  eCommandPriority := Tc3_DALI.E_DALICommandPriority.Middle,
						  eEventPriority := eEventPriority);
	IF (NOT fb103SetEventPriority.bBusy) THEN
		fb103SetEventPriority(bStart := FALSE);
		nStep := 0;
	END_IF
{endregion}
END_CASE
{endregion}
{endregion}]]></ST>
    </Implementation>
    <LineIds Name="FB_Part301PushButton">
      <LineId Id="68" Count="4" />
      <LineId Id="79" Count="5" />
      <LineId Id="90" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="929" Count="5" />
      <LineId Id="92" Count="8" />
      <LineId Id="1387" Count="0" />
      <LineId Id="1558" Count="0" />
      <LineId Id="1388" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="1389" Count="0" />
      <LineId Id="114" Count="3" />
      <LineId Id="1191" Count="0" />
      <LineId Id="118" Count="2" />
      <LineId Id="1464" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="1463" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="1390" Count="0" />
      <LineId Id="123" Count="1" />
      <LineId Id="1192" Count="0" />
      <LineId Id="125" Count="2" />
      <LineId Id="104" Count="1" />
      <LineId Id="1560" Count="19" />
      <LineId Id="1581" Count="1" />
      <LineId Id="1586" Count="0" />
      <LineId Id="1588" Count="3" />
      <LineId Id="1587" Count="0" />
      <LineId Id="1583" Count="0" />
      <LineId Id="1559" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="1395" Count="3" />
      <LineId Id="1400" Count="4" />
      <LineId Id="1392" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="147" Count="5" />
      <LineId Id="419" Count="1" />
      <LineId Id="422" Count="0" />
      <LineId Id="421" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="864" Count="0" />
      <LineId Id="1409" Count="12" />
      <LineId Id="1405" Count="1" />
      <LineId Id="128" Count="0" />
      <LineId Id="835" Count="0" />
      <LineId Id="364" Count="0" />
      <LineId Id="336" Count="2" />
      <LineId Id="136" Count="1" />
      <LineId Id="426" Count="1" />
      <LineId Id="429" Count="0" />
      <LineId Id="863" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="836" Count="0" />
      <LineId Id="365" Count="0" />
      <LineId Id="340" Count="2" />
      <LineId Id="174" Count="1" />
      <LineId Id="155" Count="0" />
      <LineId Id="432" Count="0" />
      <LineId Id="434" Count="1" />
      <LineId Id="1593" Count="9" />
      <LineId Id="1592" Count="0" />
      <LineId Id="431" Count="0" />
      <LineId Id="837" Count="0" />
      <LineId Id="343" Count="3" />
      <LineId Id="185" Count="1" />
      <LineId Id="438" Count="4" />
      <LineId Id="437" Count="0" />
      <LineId Id="861" Count="0" />
      <LineId Id="348" Count="2" />
      <LineId Id="194" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="444" Count="2" />
      <LineId Id="521" Count="0" />
      <LineId Id="526" Count="0" />
      <LineId Id="531" Count="0" />
      <LineId Id="536" Count="0" />
      <LineId Id="541" Count="0" />
      <LineId Id="551" Count="0" />
      <LineId Id="556" Count="0" />
      <LineId Id="447" Count="1" />
      <LineId Id="443" Count="0" />
      <LineId Id="860" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="197" Count="0" />
      <LineId Id="839" Count="0" />
      <LineId Id="354" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="452" Count="4" />
      <LineId Id="751" Count="1" />
      <LineId Id="1253" Count="0" />
      <LineId Id="753" Count="1" />
      <LineId Id="450" Count="0" />
      <LineId Id="1070" Count="0" />
      <LineId Id="458" Count="4" />
      <LineId Id="757" Count="1" />
      <LineId Id="761" Count="0" />
      <LineId Id="759" Count="1" />
      <LineId Id="756" Count="0" />
      <LineId Id="457" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="465" Count="3" />
      <LineId Id="763" Count="1" />
      <LineId Id="767" Count="0" />
      <LineId Id="765" Count="1" />
      <LineId Id="762" Count="0" />
      <LineId Id="1321" Count="0" />
      <LineId Id="857" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="842" Count="0" />
      <LineId Id="473" Count="1" />
      <LineId Id="1465" Count="0" />
      <LineId Id="1467" Count="10" />
      <LineId Id="1483" Count="0" />
      <LineId Id="1466" Count="0" />
      <LineId Id="769" Count="1" />
      <LineId Id="773" Count="0" />
      <LineId Id="771" Count="1" />
      <LineId Id="768" Count="0" />
      <LineId Id="469" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="1322" Count="0" />
      <LineId Id="139" Count="1" />
      <LineId Id="843" Count="0" />
      <LineId Id="477" Count="1" />
      <LineId Id="1443" Count="0" />
      <LineId Id="1445" Count="10" />
      <LineId Id="1461" Count="0" />
      <LineId Id="1444" Count="0" />
      <LineId Id="1134" Count="0" />
      <LineId Id="1136" Count="0" />
      <LineId Id="1159" Count="4" />
      <LineId Id="1157" Count="1" />
      <LineId Id="1165" Count="1" />
      <LineId Id="1164" Count="0" />
      <LineId Id="1167" Count="0" />
      <LineId Id="1138" Count="0" />
      <LineId Id="1422" Count="0" />
      <LineId Id="1424" Count="2" />
      <LineId Id="1428" Count="3" />
      <LineId Id="1423" Count="0" />
      <LineId Id="479" Count="0" />
      <LineId Id="1675" Count="0" />
      <LineId Id="480" Count="0" />
      <LineId Id="475" Count="0" />
      <LineId Id="775" Count="0" />
      <LineId Id="777" Count="0" />
      <LineId Id="776" Count="0" />
      <LineId Id="856" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="844" Count="0" />
      <LineId Id="390" Count="2" />
      <LineId Id="1071" Count="0" />
      <LineId Id="484" Count="1" />
      <LineId Id="1432" Count="8" />
      <LineId Id="486" Count="0" />
      <LineId Id="481" Count="0" />
      <LineId Id="855" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="571" Count="1" />
      <LineId Id="577" Count="0" />
      <LineId Id="582" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="592" Count="0" />
      <LineId Id="597" Count="0" />
      <LineId Id="602" Count="0" />
      <LineId Id="607" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="395" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="488" Count="4" />
      <LineId Id="487" Count="0" />
      <LineId Id="854" Count="0" />
      <LineId Id="242" Count="0" />
      <LineId Id="611" Count="0" />
      <LineId Id="846" Count="0" />
      <LineId Id="612" Count="0" />
      <LineId Id="610" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="400" Count="3" />
      <LineId Id="292" Count="1" />
      <LineId Id="494" Count="1" />
      <LineId Id="613" Count="0" />
      <LineId Id="853" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="615" Count="0" />
      <LineId Id="847" Count="0" />
      <LineId Id="616" Count="0" />
      <LineId Id="614" Count="0" />
      <LineId Id="304" Count="0" />
      <LineId Id="405" Count="3" />
      <LineId Id="312" Count="1" />
      <LineId Id="1256" Count="0" />
      <LineId Id="502" Count="0" />
      <LineId Id="1074" Count="0" />
      <LineId Id="852" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="619" Count="0" />
      <LineId Id="848" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="618" Count="0" />
      <LineId Id="314" Count="0" />
      <LineId Id="410" Count="3" />
      <LineId Id="322" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="507" Count="4" />
      <LineId Id="623" Count="0" />
      <LineId Id="849" Count="0" />
      <LineId Id="624" Count="0" />
      <LineId Id="622" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="415" Count="3" />
      <LineId Id="333" Count="0" />
      <LineId Id="324" Count="0" />
      <LineId Id="514" Count="4" />
      <LineId Id="512" Count="0" />
      <LineId Id="625" Count="0" />
      <LineId Id="994" Count="1" />
      <LineId Id="374" Count="0" />
      <LineId Id="996" Count="3" />
      <LineId Id="379" Count="0" />
      <LineId Id="1000" Count="3" />
      <LineId Id="2" Count="0" />
      <LineId Id="1004" Count="1" />
      <LineId Id="1258" Count="0" />
      <LineId Id="1007" Count="1" />
      <LineId Id="1010" Count="1" />
      <LineId Id="1168" Count="1" />
      <LineId Id="1182" Count="4" />
      <LineId Id="1181" Count="0" />
      <LineId Id="1170" Count="0" />
      <LineId Id="1188" Count="2" />
      <LineId Id="1187" Count="0" />
      <LineId Id="1171" Count="0" />
      <LineId Id="394" Count="0" />
      <LineId Id="1012" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>