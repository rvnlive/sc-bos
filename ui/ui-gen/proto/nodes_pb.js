// source: proto/nodes.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  return this || window || global || self || Function('return this')();
}).call(null);

goog.exportSymbol('proto.vanti.bsp.ew.CreateNodeRegistrationRequest', null, global);
goog.exportSymbol('proto.vanti.bsp.ew.GetNodeRegistrationRequest', null, global);
goog.exportSymbol('proto.vanti.bsp.ew.ListNodeRegistrationsRequest', null, global);
goog.exportSymbol('proto.vanti.bsp.ew.ListNodeRegistrationsResponse', null, global);
goog.exportSymbol('proto.vanti.bsp.ew.NodeRegistration', null, global);
goog.exportSymbol('proto.vanti.bsp.ew.TestNodeCommunicationRequest', null, global);
goog.exportSymbol('proto.vanti.bsp.ew.TestNodeCommunicationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.NodeRegistration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vanti.bsp.ew.NodeRegistration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.NodeRegistration.displayName = 'proto.vanti.bsp.ew.NodeRegistration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vanti.bsp.ew.GetNodeRegistrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.GetNodeRegistrationRequest.displayName = 'proto.vanti.bsp.ew.GetNodeRegistrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vanti.bsp.ew.CreateNodeRegistrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.CreateNodeRegistrationRequest.displayName = 'proto.vanti.bsp.ew.CreateNodeRegistrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.ListNodeRegistrationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vanti.bsp.ew.ListNodeRegistrationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.ListNodeRegistrationsRequest.displayName = 'proto.vanti.bsp.ew.ListNodeRegistrationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vanti.bsp.ew.ListNodeRegistrationsResponse.repeatedFields_, null);
};
goog.inherits(proto.vanti.bsp.ew.ListNodeRegistrationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.ListNodeRegistrationsResponse.displayName = 'proto.vanti.bsp.ew.ListNodeRegistrationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vanti.bsp.ew.TestNodeCommunicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.TestNodeCommunicationRequest.displayName = 'proto.vanti.bsp.ew.TestNodeCommunicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vanti.bsp.ew.TestNodeCommunicationResponse.repeatedFields_, null);
};
goog.inherits(proto.vanti.bsp.ew.TestNodeCommunicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vanti.bsp.ew.TestNodeCommunicationResponse.displayName = 'proto.vanti.bsp.ew.TestNodeCommunicationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.NodeRegistration.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.NodeRegistration.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.NodeRegistration} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.NodeRegistration.toObject = function(includeInstance, msg) {
    var f, obj = {
      name: jspb.Message.getFieldWithDefault(msg, 1, ''),
      address: jspb.Message.getFieldWithDefault(msg, 2, ''),
      description: jspb.Message.getFieldWithDefault(msg, 4, '')
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.NodeRegistration}
 */
proto.vanti.bsp.ew.NodeRegistration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.NodeRegistration;
  return proto.vanti.bsp.ew.NodeRegistration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.NodeRegistration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.NodeRegistration}
 */
proto.vanti.bsp.ew.NodeRegistration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.NodeRegistration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.NodeRegistration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.NodeRegistration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};


/**
 * @param {string} value
 * @return {!proto.vanti.bsp.ew.NodeRegistration} returns this
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};


/**
 * @param {string} value
 * @return {!proto.vanti.bsp.ew.NodeRegistration} returns this
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};


/**
 * @param {string} value
 * @return {!proto.vanti.bsp.ew.NodeRegistration} returns this
 */
proto.vanti.bsp.ew.NodeRegistration.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.GetNodeRegistrationRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.GetNodeRegistrationRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.GetNodeRegistrationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.GetNodeRegistrationRequest.toObject = function(includeInstance, msg) {
    var f, obj = {
      nodeName: jspb.Message.getFieldWithDefault(msg, 1, '')
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.GetNodeRegistrationRequest}
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.GetNodeRegistrationRequest;
  return proto.vanti.bsp.ew.GetNodeRegistrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.GetNodeRegistrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.GetNodeRegistrationRequest}
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setNodeName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.GetNodeRegistrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.GetNodeRegistrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
};


/**
 * optional string node_name = 1;
 * @return {string}
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};


/**
 * @param {string} value
 * @return {!proto.vanti.bsp.ew.GetNodeRegistrationRequest} returns this
 */
proto.vanti.bsp.ew.GetNodeRegistrationRequest.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.CreateNodeRegistrationRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.CreateNodeRegistrationRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.CreateNodeRegistrationRequest.toObject = function(includeInstance, msg) {
    var f, obj = {
      nodeRegistration: (f = msg.getNodeRegistration()) && proto.vanti.bsp.ew.NodeRegistration.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest}
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.CreateNodeRegistrationRequest;
  return proto.vanti.bsp.ew.CreateNodeRegistrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest}
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.vanti.bsp.ew.NodeRegistration;
        reader.readMessage(value, proto.vanti.bsp.ew.NodeRegistration.deserializeBinaryFromReader);
        msg.setNodeRegistration(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.CreateNodeRegistrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeRegistration();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.vanti.bsp.ew.NodeRegistration.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeRegistration node_registration = 1;
 * @return {?proto.vanti.bsp.ew.NodeRegistration}
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.prototype.getNodeRegistration = function() {
  return /** @type{?proto.vanti.bsp.ew.NodeRegistration} */ (
      jspb.Message.getWrapperField(this, proto.vanti.bsp.ew.NodeRegistration, 1));
};


/**
 * @param {?proto.vanti.bsp.ew.NodeRegistration|undefined} value
 * @return {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest} returns this
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.prototype.setNodeRegistration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vanti.bsp.ew.CreateNodeRegistrationRequest} returns this
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.prototype.clearNodeRegistration = function() {
  return this.setNodeRegistration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vanti.bsp.ew.CreateNodeRegistrationRequest.prototype.hasNodeRegistration = function() {
  return jspb.Message.getField(this, 1) != null;
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.ListNodeRegistrationsRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.ListNodeRegistrationsRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.ListNodeRegistrationsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.ListNodeRegistrationsRequest.toObject = function(includeInstance, msg) {
    var f, obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.ListNodeRegistrationsRequest}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.ListNodeRegistrationsRequest;
  return proto.vanti.bsp.ew.ListNodeRegistrationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.ListNodeRegistrationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.ListNodeRegistrationsRequest}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.ListNodeRegistrationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.ListNodeRegistrationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.ListNodeRegistrationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.ListNodeRegistrationsResponse.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.ListNodeRegistrationsResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.ListNodeRegistrationsResponse.toObject = function(includeInstance, msg) {
    var f, obj = {
      nodeRegistrationsList: jspb.Message.toObjectList(msg.getNodeRegistrationsList(),
          proto.vanti.bsp.ew.NodeRegistration.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.ListNodeRegistrationsResponse;
  return proto.vanti.bsp.ew.ListNodeRegistrationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.vanti.bsp.ew.NodeRegistration;
        reader.readMessage(value, proto.vanti.bsp.ew.NodeRegistration.deserializeBinaryFromReader);
        msg.addNodeRegistrations(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.ListNodeRegistrationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeRegistrationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.vanti.bsp.ew.NodeRegistration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeRegistration node_registrations = 1;
 * @return {!Array<!proto.vanti.bsp.ew.NodeRegistration>}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.prototype.getNodeRegistrationsList = function() {
  return /** @type{!Array<!proto.vanti.bsp.ew.NodeRegistration>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.vanti.bsp.ew.NodeRegistration, 1));
};


/**
 * @param {!Array<!proto.vanti.bsp.ew.NodeRegistration>} value
 * @return {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse} returns this
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.prototype.setNodeRegistrationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vanti.bsp.ew.NodeRegistration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vanti.bsp.ew.NodeRegistration}
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.prototype.addNodeRegistrations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vanti.bsp.ew.NodeRegistration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vanti.bsp.ew.ListNodeRegistrationsResponse} returns this
 */
proto.vanti.bsp.ew.ListNodeRegistrationsResponse.prototype.clearNodeRegistrationsList = function() {
  return this.setNodeRegistrationsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.TestNodeCommunicationRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.TestNodeCommunicationRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.TestNodeCommunicationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.TestNodeCommunicationRequest.toObject = function(includeInstance, msg) {
    var f, obj = {
      nodeName: jspb.Message.getFieldWithDefault(msg, 1, '')
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationRequest}
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.TestNodeCommunicationRequest;
  return proto.vanti.bsp.ew.TestNodeCommunicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.TestNodeCommunicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationRequest}
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setNodeName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.TestNodeCommunicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.TestNodeCommunicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
};


/**
 * optional string node_name = 1;
 * @return {string}
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};


/**
 * @param {string} value
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationRequest} returns this
 */
proto.vanti.bsp.ew.TestNodeCommunicationRequest.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.repeatedFields_ = [1];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.vanti.bsp.ew.TestNodeCommunicationResponse.prototype.toObject = function(opt_includeInstance) {
    return proto.vanti.bsp.ew.TestNodeCommunicationResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.vanti.bsp.ew.TestNodeCommunicationResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.vanti.bsp.ew.TestNodeCommunicationResponse.toObject = function(includeInstance, msg) {
    var f, obj = {
      servicesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationResponse}
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vanti.bsp.ew.TestNodeCommunicationResponse;
  return proto.vanti.bsp.ew.TestNodeCommunicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vanti.bsp.ew.TestNodeCommunicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationResponse}
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addServices(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vanti.bsp.ew.TestNodeCommunicationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vanti.bsp.ew.TestNodeCommunicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
        1,
        f
    );
  }
};


/**
 * repeated string services = 1;
 * @return {!Array<string>}
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.prototype.getServicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationResponse} returns this
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.prototype.setServicesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationResponse} returns this
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.prototype.addServices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vanti.bsp.ew.TestNodeCommunicationResponse} returns this
 */
proto.vanti.bsp.ew.TestNodeCommunicationResponse.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};


goog.object.extend(exports, proto.vanti.bsp.ew);
