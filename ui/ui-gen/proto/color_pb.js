// source: color.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var types_info_pb = require('@smart-core-os/sc-api-grpc-web/types/info_pb.js');
goog.object.extend(proto, types_info_pb);
var types_number_pb = require('@smart-core-os/sc-api-grpc-web/types/number_pb.js');
goog.object.extend(proto, types_number_pb);
var types_tween_pb = require('@smart-core-os/sc-api-grpc-web/types/tween_pb.js');
goog.object.extend(proto, types_tween_pb);
goog.exportSymbol('proto.smartcore.bos.Color', null, global);
goog.exportSymbol('proto.smartcore.bos.ColorChannels', null, global);
goog.exportSymbol('proto.smartcore.bos.ColorPreset', null, global);
goog.exportSymbol('proto.smartcore.bos.ColorSupport', null, global);
goog.exportSymbol('proto.smartcore.bos.DescribeColorRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.GetColorRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.PullColorRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.PullColorResponse', null, global);
goog.exportSymbol('proto.smartcore.bos.PullColorResponse.Change', null, global);
goog.exportSymbol('proto.smartcore.bos.UpdateColorRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.Color = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.Color, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.Color.displayName = 'proto.smartcore.bos.Color';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ColorChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.ColorChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ColorChannels.displayName = 'proto.smartcore.bos.ColorChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ColorPreset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.ColorPreset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ColorPreset.displayName = 'proto.smartcore.bos.ColorPreset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ColorSupport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.ColorSupport.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.ColorSupport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ColorSupport.displayName = 'proto.smartcore.bos.ColorSupport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.UpdateColorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.UpdateColorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.UpdateColorRequest.displayName = 'proto.smartcore.bos.UpdateColorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.GetColorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.GetColorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.GetColorRequest.displayName = 'proto.smartcore.bos.GetColorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullColorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullColorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullColorRequest.displayName = 'proto.smartcore.bos.PullColorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullColorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.PullColorResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.PullColorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullColorResponse.displayName = 'proto.smartcore.bos.PullColorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullColorResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullColorResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullColorResponse.Change.displayName = 'proto.smartcore.bos.PullColorResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.DescribeColorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.DescribeColorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.DescribeColorRequest.displayName = 'proto.smartcore.bos.DescribeColorRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.Color.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.Color.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.Color} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.Color.toObject = function(includeInstance, msg) {
  var f, obj = {
    channels: (f = msg.getChannels()) && proto.smartcore.bos.ColorChannels.toObject(includeInstance, f),
    preset: (f = msg.getPreset()) && proto.smartcore.bos.ColorPreset.toObject(includeInstance, f),
    colorTween: (f = msg.getColorTween()) && types_tween_pb.Tween.toObject(includeInstance, f),
    targetChannels: (f = msg.getTargetChannels()) && proto.smartcore.bos.ColorChannels.toObject(includeInstance, f),
    targetPreset: (f = msg.getTargetPreset()) && proto.smartcore.bos.ColorPreset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.Color}
 */
proto.smartcore.bos.Color.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.Color;
  return proto.smartcore.bos.Color.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.Color} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.Color}
 */
proto.smartcore.bos.Color.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.ColorChannels;
      reader.readMessage(value,proto.smartcore.bos.ColorChannels.deserializeBinaryFromReader);
      msg.setChannels(value);
      break;
    case 2:
      var value = new proto.smartcore.bos.ColorPreset;
      reader.readMessage(value,proto.smartcore.bos.ColorPreset.deserializeBinaryFromReader);
      msg.setPreset(value);
      break;
    case 3:
      var value = new types_tween_pb.Tween;
      reader.readMessage(value,types_tween_pb.Tween.deserializeBinaryFromReader);
      msg.setColorTween(value);
      break;
    case 4:
      var value = new proto.smartcore.bos.ColorChannels;
      reader.readMessage(value,proto.smartcore.bos.ColorChannels.deserializeBinaryFromReader);
      msg.setTargetChannels(value);
      break;
    case 5:
      var value = new proto.smartcore.bos.ColorPreset;
      reader.readMessage(value,proto.smartcore.bos.ColorPreset.deserializeBinaryFromReader);
      msg.setTargetPreset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.Color.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.Color.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.Color} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.Color.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannels();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.bos.ColorChannels.serializeBinaryToWriter
    );
  }
  f = message.getPreset();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.bos.ColorPreset.serializeBinaryToWriter
    );
  }
  f = message.getColorTween();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      types_tween_pb.Tween.serializeBinaryToWriter
    );
  }
  f = message.getTargetChannels();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.smartcore.bos.ColorChannels.serializeBinaryToWriter
    );
  }
  f = message.getTargetPreset();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.smartcore.bos.ColorPreset.serializeBinaryToWriter
    );
  }
};


/**
 * optional ColorChannels channels = 1;
 * @return {?proto.smartcore.bos.ColorChannels}
 */
proto.smartcore.bos.Color.prototype.getChannels = function() {
  return /** @type{?proto.smartcore.bos.ColorChannels} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.ColorChannels, 1));
};


/**
 * @param {?proto.smartcore.bos.ColorChannels|undefined} value
 * @return {!proto.smartcore.bos.Color} returns this
*/
proto.smartcore.bos.Color.prototype.setChannels = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.Color} returns this
 */
proto.smartcore.bos.Color.prototype.clearChannels = function() {
  return this.setChannels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.Color.prototype.hasChannels = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ColorPreset preset = 2;
 * @return {?proto.smartcore.bos.ColorPreset}
 */
proto.smartcore.bos.Color.prototype.getPreset = function() {
  return /** @type{?proto.smartcore.bos.ColorPreset} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.ColorPreset, 2));
};


/**
 * @param {?proto.smartcore.bos.ColorPreset|undefined} value
 * @return {!proto.smartcore.bos.Color} returns this
*/
proto.smartcore.bos.Color.prototype.setPreset = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.Color} returns this
 */
proto.smartcore.bos.Color.prototype.clearPreset = function() {
  return this.setPreset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.Color.prototype.hasPreset = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional smartcore.types.Tween color_tween = 3;
 * @return {?proto.smartcore.types.Tween}
 */
proto.smartcore.bos.Color.prototype.getColorTween = function() {
  return /** @type{?proto.smartcore.types.Tween} */ (
    jspb.Message.getWrapperField(this, types_tween_pb.Tween, 3));
};


/**
 * @param {?proto.smartcore.types.Tween|undefined} value
 * @return {!proto.smartcore.bos.Color} returns this
*/
proto.smartcore.bos.Color.prototype.setColorTween = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.Color} returns this
 */
proto.smartcore.bos.Color.prototype.clearColorTween = function() {
  return this.setColorTween(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.Color.prototype.hasColorTween = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ColorChannels target_channels = 4;
 * @return {?proto.smartcore.bos.ColorChannels}
 */
proto.smartcore.bos.Color.prototype.getTargetChannels = function() {
  return /** @type{?proto.smartcore.bos.ColorChannels} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.ColorChannels, 4));
};


/**
 * @param {?proto.smartcore.bos.ColorChannels|undefined} value
 * @return {!proto.smartcore.bos.Color} returns this
*/
proto.smartcore.bos.Color.prototype.setTargetChannels = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.Color} returns this
 */
proto.smartcore.bos.Color.prototype.clearTargetChannels = function() {
  return this.setTargetChannels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.Color.prototype.hasTargetChannels = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ColorPreset target_preset = 5;
 * @return {?proto.smartcore.bos.ColorPreset}
 */
proto.smartcore.bos.Color.prototype.getTargetPreset = function() {
  return /** @type{?proto.smartcore.bos.ColorPreset} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.ColorPreset, 5));
};


/**
 * @param {?proto.smartcore.bos.ColorPreset|undefined} value
 * @return {!proto.smartcore.bos.Color} returns this
*/
proto.smartcore.bos.Color.prototype.setTargetPreset = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.Color} returns this
 */
proto.smartcore.bos.Color.prototype.clearTargetPreset = function() {
  return this.setTargetPreset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.Color.prototype.hasTargetPreset = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ColorChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ColorChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ColorChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ColorChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    red: jspb.Message.getFieldWithDefault(msg, 1, 0),
    green: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    intensity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    temperature: jspb.Message.getFieldWithDefault(msg, 5, 0),
    moreMap: (f = msg.getMoreMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ColorChannels}
 */
proto.smartcore.bos.ColorChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ColorChannels;
  return proto.smartcore.bos.ColorChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ColorChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ColorChannels}
 */
proto.smartcore.bos.ColorChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGreen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntensity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTemperature(value);
      break;
    case 6:
      var value = msg.getMoreMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint32, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ColorChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ColorChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ColorChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ColorChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMoreMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint32);
  }
};


/**
 * optional uint32 red = 1;
 * @return {number}
 */
proto.smartcore.bos.ColorChannels.prototype.getRed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.setRed = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.clearRed = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorChannels.prototype.hasRed = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 green = 2;
 * @return {number}
 */
proto.smartcore.bos.ColorChannels.prototype.getGreen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.setGreen = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.clearGreen = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorChannels.prototype.hasGreen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 blue = 3;
 * @return {number}
 */
proto.smartcore.bos.ColorChannels.prototype.getBlue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.setBlue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.clearBlue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorChannels.prototype.hasBlue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 intensity = 4;
 * @return {number}
 */
proto.smartcore.bos.ColorChannels.prototype.getIntensity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.setIntensity = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.clearIntensity = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorChannels.prototype.hasIntensity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 temperature = 5;
 * @return {number}
 */
proto.smartcore.bos.ColorChannels.prototype.getTemperature = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.setTemperature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.clearTemperature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorChannels.prototype.hasTemperature = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, uint32> more = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.smartcore.bos.ColorChannels.prototype.getMoreMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.smartcore.bos.ColorChannels} returns this
 */
proto.smartcore.bos.ColorChannels.prototype.clearMoreMap = function() {
  this.getMoreMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ColorPreset.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ColorPreset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ColorPreset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ColorPreset.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ColorPreset}
 */
proto.smartcore.bos.ColorPreset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ColorPreset;
  return proto.smartcore.bos.ColorPreset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ColorPreset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ColorPreset}
 */
proto.smartcore.bos.ColorPreset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ColorPreset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ColorPreset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ColorPreset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ColorPreset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.ColorPreset.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ColorPreset} returns this
 */
proto.smartcore.bos.ColorPreset.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.smartcore.bos.ColorPreset.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ColorPreset} returns this
 */
proto.smartcore.bos.ColorPreset.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.ColorSupport.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ColorSupport.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ColorSupport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ColorSupport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ColorSupport.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceSupport: (f = msg.getResourceSupport()) && types_info_pb.ResourceSupport.toObject(includeInstance, f),
    colorAttributes: (f = msg.getColorAttributes()) && types_number_pb.Int32Attributes.toObject(includeInstance, f),
    presetsList: jspb.Message.toObjectList(msg.getPresetsList(),
    proto.smartcore.bos.ColorPreset.toObject, includeInstance),
    channelsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ColorSupport}
 */
proto.smartcore.bos.ColorSupport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ColorSupport;
  return proto.smartcore.bos.ColorSupport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ColorSupport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ColorSupport}
 */
proto.smartcore.bos.ColorSupport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_info_pb.ResourceSupport;
      reader.readMessage(value,types_info_pb.ResourceSupport.deserializeBinaryFromReader);
      msg.setResourceSupport(value);
      break;
    case 2:
      var value = new types_number_pb.Int32Attributes;
      reader.readMessage(value,types_number_pb.Int32Attributes.deserializeBinaryFromReader);
      msg.setColorAttributes(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.ColorPreset;
      reader.readMessage(value,proto.smartcore.bos.ColorPreset.deserializeBinaryFromReader);
      msg.addPresets(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ColorSupport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ColorSupport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ColorSupport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ColorSupport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceSupport();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_info_pb.ResourceSupport.serializeBinaryToWriter
    );
  }
  f = message.getColorAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_number_pb.Int32Attributes.serializeBinaryToWriter
    );
  }
  f = message.getPresetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.smartcore.bos.ColorPreset.serializeBinaryToWriter
    );
  }
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional smartcore.types.ResourceSupport resource_support = 1;
 * @return {?proto.smartcore.types.ResourceSupport}
 */
proto.smartcore.bos.ColorSupport.prototype.getResourceSupport = function() {
  return /** @type{?proto.smartcore.types.ResourceSupport} */ (
    jspb.Message.getWrapperField(this, types_info_pb.ResourceSupport, 1));
};


/**
 * @param {?proto.smartcore.types.ResourceSupport|undefined} value
 * @return {!proto.smartcore.bos.ColorSupport} returns this
*/
proto.smartcore.bos.ColorSupport.prototype.setResourceSupport = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.ColorSupport} returns this
 */
proto.smartcore.bos.ColorSupport.prototype.clearResourceSupport = function() {
  return this.setResourceSupport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorSupport.prototype.hasResourceSupport = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional smartcore.types.Int32Attributes color_attributes = 2;
 * @return {?proto.smartcore.types.Int32Attributes}
 */
proto.smartcore.bos.ColorSupport.prototype.getColorAttributes = function() {
  return /** @type{?proto.smartcore.types.Int32Attributes} */ (
    jspb.Message.getWrapperField(this, types_number_pb.Int32Attributes, 2));
};


/**
 * @param {?proto.smartcore.types.Int32Attributes|undefined} value
 * @return {!proto.smartcore.bos.ColorSupport} returns this
*/
proto.smartcore.bos.ColorSupport.prototype.setColorAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.ColorSupport} returns this
 */
proto.smartcore.bos.ColorSupport.prototype.clearColorAttributes = function() {
  return this.setColorAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ColorSupport.prototype.hasColorAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ColorPreset presets = 3;
 * @return {!Array<!proto.smartcore.bos.ColorPreset>}
 */
proto.smartcore.bos.ColorSupport.prototype.getPresetsList = function() {
  return /** @type{!Array<!proto.smartcore.bos.ColorPreset>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.ColorPreset, 3));
};


/**
 * @param {!Array<!proto.smartcore.bos.ColorPreset>} value
 * @return {!proto.smartcore.bos.ColorSupport} returns this
*/
proto.smartcore.bos.ColorSupport.prototype.setPresetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.smartcore.bos.ColorPreset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.ColorPreset}
 */
proto.smartcore.bos.ColorSupport.prototype.addPresets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.smartcore.bos.ColorPreset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.ColorSupport} returns this
 */
proto.smartcore.bos.ColorSupport.prototype.clearPresetsList = function() {
  return this.setPresetsList([]);
};


/**
 * repeated string channels = 4;
 * @return {!Array<string>}
 */
proto.smartcore.bos.ColorSupport.prototype.getChannelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.smartcore.bos.ColorSupport} returns this
 */
proto.smartcore.bos.ColorSupport.prototype.setChannelsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.ColorSupport} returns this
 */
proto.smartcore.bos.ColorSupport.prototype.addChannels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.ColorSupport} returns this
 */
proto.smartcore.bos.ColorSupport.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.UpdateColorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.UpdateColorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.UpdateColorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    color: (f = msg.getColor()) && proto.smartcore.bos.Color.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.UpdateColorRequest}
 */
proto.smartcore.bos.UpdateColorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.UpdateColorRequest;
  return proto.smartcore.bos.UpdateColorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.UpdateColorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.UpdateColorRequest}
 */
proto.smartcore.bos.UpdateColorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.smartcore.bos.Color;
      reader.readMessage(value,proto.smartcore.bos.Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.UpdateColorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.UpdateColorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.UpdateColorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.bos.Color.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.UpdateColorRequest} returns this
 */
proto.smartcore.bos.UpdateColorRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Color color = 2;
 * @return {?proto.smartcore.bos.Color}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.getColor = function() {
  return /** @type{?proto.smartcore.bos.Color} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.Color, 2));
};


/**
 * @param {?proto.smartcore.bos.Color|undefined} value
 * @return {!proto.smartcore.bos.UpdateColorRequest} returns this
*/
proto.smartcore.bos.UpdateColorRequest.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.UpdateColorRequest} returns this
 */
proto.smartcore.bos.UpdateColorRequest.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.hasColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.UpdateColorRequest} returns this
*/
proto.smartcore.bos.UpdateColorRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.UpdateColorRequest} returns this
 */
proto.smartcore.bos.UpdateColorRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.UpdateColorRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.GetColorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.GetColorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.GetColorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.GetColorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.GetColorRequest}
 */
proto.smartcore.bos.GetColorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.GetColorRequest;
  return proto.smartcore.bos.GetColorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.GetColorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.GetColorRequest}
 */
proto.smartcore.bos.GetColorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.GetColorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.GetColorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.GetColorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.GetColorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.GetColorRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.GetColorRequest} returns this
 */
proto.smartcore.bos.GetColorRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.GetColorRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.GetColorRequest} returns this
*/
proto.smartcore.bos.GetColorRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.GetColorRequest} returns this
 */
proto.smartcore.bos.GetColorRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.GetColorRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullColorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullColorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullColorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullColorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    excludeRamping: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    updatesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullColorRequest}
 */
proto.smartcore.bos.PullColorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullColorRequest;
  return proto.smartcore.bos.PullColorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullColorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullColorRequest}
 */
proto.smartcore.bos.PullColorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcludeRamping(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatesOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullColorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullColorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullColorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullColorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExcludeRamping();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullColorRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullColorRequest} returns this
 */
proto.smartcore.bos.PullColorRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool exclude_ramping = 2;
 * @return {boolean}
 */
proto.smartcore.bos.PullColorRequest.prototype.getExcludeRamping = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.bos.PullColorRequest} returns this
 */
proto.smartcore.bos.PullColorRequest.prototype.setExcludeRamping = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.PullColorRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.PullColorRequest} returns this
*/
proto.smartcore.bos.PullColorRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullColorRequest} returns this
 */
proto.smartcore.bos.PullColorRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullColorRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool updates_only = 4;
 * @return {boolean}
 */
proto.smartcore.bos.PullColorRequest.prototype.getUpdatesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.bos.PullColorRequest} returns this
 */
proto.smartcore.bos.PullColorRequest.prototype.setUpdatesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.PullColorResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullColorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullColorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullColorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullColorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.bos.PullColorResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullColorResponse}
 */
proto.smartcore.bos.PullColorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullColorResponse;
  return proto.smartcore.bos.PullColorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullColorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullColorResponse}
 */
proto.smartcore.bos.PullColorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.PullColorResponse.Change;
      reader.readMessage(value,proto.smartcore.bos.PullColorResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullColorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullColorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullColorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullColorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.PullColorResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullColorResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullColorResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullColorResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    color: (f = msg.getColor()) && proto.smartcore.bos.Color.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullColorResponse.Change}
 */
proto.smartcore.bos.PullColorResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullColorResponse.Change;
  return proto.smartcore.bos.PullColorResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullColorResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullColorResponse.Change}
 */
proto.smartcore.bos.PullColorResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.Color;
      reader.readMessage(value,proto.smartcore.bos.Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullColorResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullColorResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullColorResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.Color.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullColorResponse.Change} returns this
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp change_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.PullColorResponse.Change} returns this
*/
proto.smartcore.bos.PullColorResponse.Change.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullColorResponse.Change} returns this
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Color color = 3;
 * @return {?proto.smartcore.bos.Color}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.getColor = function() {
  return /** @type{?proto.smartcore.bos.Color} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.Color, 3));
};


/**
 * @param {?proto.smartcore.bos.Color|undefined} value
 * @return {!proto.smartcore.bos.PullColorResponse.Change} returns this
*/
proto.smartcore.bos.PullColorResponse.Change.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullColorResponse.Change} returns this
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullColorResponse.Change.prototype.hasColor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.bos.PullColorResponse.Change>}
 */
proto.smartcore.bos.PullColorResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.bos.PullColorResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.PullColorResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.PullColorResponse.Change>} value
 * @return {!proto.smartcore.bos.PullColorResponse} returns this
*/
proto.smartcore.bos.PullColorResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.PullColorResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.PullColorResponse.Change}
 */
proto.smartcore.bos.PullColorResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.PullColorResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.PullColorResponse} returns this
 */
proto.smartcore.bos.PullColorResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.DescribeColorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.DescribeColorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.DescribeColorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.DescribeColorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.DescribeColorRequest}
 */
proto.smartcore.bos.DescribeColorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.DescribeColorRequest;
  return proto.smartcore.bos.DescribeColorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.DescribeColorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.DescribeColorRequest}
 */
proto.smartcore.bos.DescribeColorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.DescribeColorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.DescribeColorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.DescribeColorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.DescribeColorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.DescribeColorRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.DescribeColorRequest} returns this
 */
proto.smartcore.bos.DescribeColorRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.smartcore.bos);
